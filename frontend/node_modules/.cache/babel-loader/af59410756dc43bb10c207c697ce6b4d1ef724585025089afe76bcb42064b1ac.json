{"ast":null,"code":"import _objectSpread from\"/Users/will-liao/Desktop/Coding/web-scraping-api-3/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:5000';function App(){const[scrapers,setScrapers]=useState([]);const[loading,setLoading]=useState(false);const[showAddModal,setShowAddModal]=useState(false);const[showEditModal,setShowEditModal]=useState(false);const[showEditConfigModal,setShowEditConfigModal]=useState(false);const[newScraperName,setNewScraperName]=useState('');const[newScrapingUrl,setNewScrapingUrl]=useState('');const[warning,setWarning]=useState('');const[editScraperId,setEditScraperId]=useState(null);const[editScraperName,setEditScraperName]=useState('');const[editScrapingUrl,setEditScrapingUrl]=useState('');const[testResult,setTestResult]=useState(null);const[trimOutput,setTrimOutput]=useState('');// New states for Refresh output and toggles\nconst[refreshOutputHtml,setRefreshOutputHtml]=useState('');const[refreshOutputJson,setRefreshOutputJson]=useState(null);const[showOutput,setShowOutput]=useState(true);const[outputFormatHtml,setOutputFormatHtml]=useState(true);// true=HTML, false=JSON\n// New states for added fields\nconst[selectedTags,setSelectedTags]=useState([]);const[groupRows,setGroupRows]=useState(0);const[rowLabels,setRowLabels]=useState([]);// New states for Select Tags modal\nconst[showSelectTagsModal,setShowSelectTagsModal]=useState(false);const[availableTags,setAvailableTags]=useState([]);const[selectedTagIds,setSelectedTagIds]=useState(new Set());// New state for Set Labels modal and input values\nconst[showSetLabelsModal,setShowSetLabelsModal]=useState(false);const[labelInputs,setLabelInputs]=useState([]);useEffect(()=>{fetchScrapers();},[]);const fetchScrapers=async()=>{setLoading(true);try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/scrapers\"));setScrapers(response.data);}catch(error){console.error('Error fetching scrapers:',error);}finally{setLoading(false);}};const handleDelete=async id=>{if(!window.confirm('Are you sure you want to delete this scraper?'))return;try{await axios.delete(\"\".concat(API_BASE_URL,\"/scrapers\"),{data:{scraper_id:id}});fetchScrapers();}catch(error){console.error('Error deleting scraper:',error);}};const openAddModal=()=>{setWarning('');setNewScraperName('');setNewScrapingUrl('');setShowAddModal(true);};const closeAddModal=()=>{setShowAddModal(false);};const openEditModal=scraper=>{setWarning('');setEditScraperId(scraper.scraper_id);setEditScraperName(scraper.scraper_name);setEditScrapingUrl(scraper.scraping_url);setTestResult(null);setShowEditModal(true);};const closeEditModal=()=>{setShowEditModal(false);};const isValidUrl=url=>{try{new URL(url);return true;}catch(_){return false;}};const handleAddConfirm=async()=>{if(!newScraperName.trim()||!newScrapingUrl.trim()){setWarning('Please fill in both Scraper Name and Scraping URL.');return;}if(!isValidUrl(newScrapingUrl.trim())){setWarning('Please enter a valid URL for Scraping URL.');return;}try{await axios.post(\"\".concat(API_BASE_URL,\"/scrapers\"),{scraper_name:newScraperName,scraping_url:newScrapingUrl});closeAddModal();fetchScrapers();}catch(error){console.error('Error creating scraper:',error);setWarning('Failed to create scraper. Please try again.');}};const handleEditConfirm=async()=>{if(!editScraperName.trim()||!editScrapingUrl.trim()){setWarning('Please fill in both Scraper Name and Scraping URL.');return;}if(!isValidUrl(editScrapingUrl.trim())){setWarning('Please enter a valid URL for Scraping URL.');return;}try{await axios.put(\"\".concat(API_BASE_URL,\"/scrapers\"),{scraper_id:editScraperId,scraper_name:editScraperName,scraping_url:editScrapingUrl});closeEditModal();fetchScrapers();}catch(error){console.error('Error updating scraper:',error);setWarning('Failed to update scraper. Please try again.');}};const handleTestScraper=async()=>{try{const response=await axios.get(\"\".concat(API_BASE_URL,\"/scrape/\").concat(editScraperId));setTestResult(response.data);}catch(error){console.error('Error testing scraper:',error);setTestResult({error:'Failed to test scraper.'});}};const openEditConfigModal=()=>{setShowEditConfigModal(true);};const closeEditConfigModal=()=>{setShowEditConfigModal(false);};// Function to parse trim output tag like backend parse_trim_input\nconst parseTrimOutput=trim=>{const tagMatch=trim.match(/^<(\\w+)([^>]*)>/);if(!tagMatch)return null;const tagName=tagMatch[1];const attrString=tagMatch[2].trim();const attrs={};if(attrString){const classMatch=attrString.match(/class=[\"']([^\"']+)[\"']/);if(classMatch){attrs.class=classMatch[1].split(' ');}}return{tagName,attrs};};// Function to filter raw data based on trim output tag\nconst filterRawData=(data,trim)=>{if(!trim||!data)return data;const parsed=parseTrimOutput(trim);if(!parsed)return data;// For simplicity, if rawData is an object with html/text, filter keys containing tagName\n// This is a placeholder; real filtering depends on rawData structure\nif(typeof data==='object'){// Example: filter keys containing tagName\nconst filtered={};Object.keys(data).forEach(key=>{if(key.includes(parsed.tagName)){filtered[key]=data[key];}});return Object.keys(filtered).length>0?filtered:data;}return data;};// Fetch scraper config details including new fields\nconst fetchScraperConfigDetails=async scraperId=>{try{// Fetch scraper to get scraper_config_id\nconst scraperRes=await axios.get(\"\".concat(API_BASE_URL,\"/scrapers/\").concat(scraperId));const scraperConfigId=scraperRes.data.scraper_config_id;// Fetch scraper config\nconst configRes=await axios.get(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId));const config=configRes.data;setTrimOutput(config.trim_input||'');setGroupRows(config.group_row_count||1);// default to 1 if falsy\n// Fetch selected tags\nconst tagsRes=await axios.get(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId,\"/tags\"));setSelectedTags(Array.isArray(tagsRes.data)?tagsRes.data:[]);// Fetch row labels\nconst rowLabelsRes=await axios.get(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId,\"/row-labels\"));// Sort row labels by row_order\nconst sortedRowLabels=rowLabelsRes.data.sort((a,b)=>a.row_order-b.row_order);setRowLabels(sortedRowLabels);}catch(error){console.error('Error fetching scraper config details:',error);setTrimOutput('');setSelectedTags([]);setGroupRows(1);// default to 1 on error\nsetRowLabels([]);}};// Refresh output by calling /raw endpoint in scraper_routes with optional parameters\nconst refreshOutput=async()=>{if(!editScraperId)return;try{// Fetch scraper to get scraper_config_id\nconst scraperRes=await axios.get(\"\".concat(API_BASE_URL,\"/scrapers/\").concat(editScraperId));const scraperConfigId=scraperRes.data.scraper_config_id;// Prepare optional parameters\nconst params={};if(trimOutput)params.trim_tag=trimOutput;if(groupRows)params.group_row_count=groupRows;// Send tags and row_labels as repeated parameters without square brackets\nif(selectedTags.length>0){selectedTags.forEach(tag=>{if(!params.tags)params.tags=[];params.tags.push(tag.tag);});}if(rowLabels.length>0){rowLabels.forEach(label=>{if(!params.row_labels)params.row_labels=[];params.row_labels.push(label.row_label);});}// Call /raw endpoint with json output\nconst jsonRes=await axios.get(\"\".concat(API_BASE_URL,\"/raw/\").concat(editScraperId),{params:_objectSpread(_objectSpread({},params),{},{output_format:'json'})});setRefreshOutputJson(jsonRes.data);// Call /raw endpoint with html output\nconst htmlRes=await axios.get(\"\".concat(API_BASE_URL,\"/raw/\").concat(editScraperId),{params:_objectSpread(_objectSpread({},params),{},{output_format:'html'})});setRefreshOutputHtml(htmlRes.data||'');}catch(error){console.error('Error refreshing output:',error);setRefreshOutputJson(null);setRefreshOutputHtml('');}};// Call fetchScraperConfigDetails when Edit Configuration modal opens\nuseEffect(()=>{if(showEditConfigModal&&editScraperId){fetchScraperConfigDetails(editScraperId);}},[showEditConfigModal,editScraperId]);// Fetch available tags when Select Tags modal opens\nuseEffect(()=>{if(showSelectTagsModal&&editScraperId){const fetchTags=async()=>{try{const params={};if(trimOutput)params.trim_tag=trimOutput;const res=await axios.get(\"\".concat(API_BASE_URL,\"/raw/\").concat(editScraperId,\"/tags\"),{params});const tags=res.data.tags||[];const descendentTags=res.data.descendent_tags||[];// Combine tags and descendent tags\nconst combinedTags=[...tags,...descendentTags];// Remove duplicates by tag name\nconst uniqueTagsMap=new Map();combinedTags.forEach(t=>{if(!uniqueTagsMap.has(t.tag)){uniqueTagsMap.set(t.tag,t);}});const uniqueTags=Array.from(uniqueTagsMap.values());// Calculate occurrences for each tag\nconst occurrencesMap=new Map();uniqueTags.forEach(t=>{const count=res.data.raw_html?(res.data.raw_html.match(new RegExp(\"<\".concat(t.tag,\"[^>]*>\"),'g'))||[]).length:0;occurrencesMap.set(t.tag,count);});// Add occurrences to each tag object\nconst tagsWithOccurrences=uniqueTags.map(t=>_objectSpread(_objectSpread({},t),{},{occurrences:occurrencesMap.get(t.tag)||0}));setAvailableTags(tagsWithOccurrences);// Initialize selectedTagIds from current selectedTags\nconst currentSelected=new Set(selectedTags.map(t=>t.tag));setSelectedTagIds(currentSelected);}catch(error){console.error('Error fetching available tags:',error);setAvailableTags([]);}};fetchTags();}},[showSelectTagsModal,editScraperId]);const toggleTagSelection=tag=>{const newSelected=new Set(selectedTagIds);if(newSelected.has(tag)){newSelected.delete(tag);}else{newSelected.add(tag);}setSelectedTagIds(newSelected);};const confirmTagSelection=()=>{// Update selectedTags state with selected tags\nconst newSelectedTags=availableTags.filter(t=>selectedTagIds.has(t.tag)).map(t=>({tag:t.tag}));setSelectedTags(Array.isArray(newSelectedTags)?newSelectedTags:[]);setShowSelectTagsModal(false);};const cancelTagSelection=()=>{setShowSelectTagsModal(false);};// Open Set Labels modal and initialize inputs based on groupRows\nconst openSetLabelsModal=()=>{const count=groupRows>0?groupRows:1;const inputs=[];for(let i=0;i<count;i++){var _rowLabels$i;inputs.push(((_rowLabels$i=rowLabels[i])===null||_rowLabels$i===void 0?void 0:_rowLabels$i.row_label)||'');}setLabelInputs(inputs);setShowSetLabelsModal(true);};// Handle input change in Set Labels modal\nconst handleLabelInputChange=(index,value)=>{const newInputs=[...labelInputs];newInputs[index]=value;setLabelInputs(newInputs);};// Confirm Set Labels modal and update rowLabels state\nconst confirmSetLabels=()=>{const newRowLabels=labelInputs.map((label,index)=>({row_order:index+1,row_label:label}));setRowLabels(newRowLabels);setShowSetLabelsModal(false);};// Cancel Set Labels modal\nconst cancelSetLabels=()=>{setShowSetLabelsModal(false);};const handleConfirmConfig=async()=>{if(!editScraperId)return;try{// Fetch scraper to get scraper_config_id\nconst scraperRes=await axios.get(\"\".concat(API_BASE_URL,\"/scrapers/\").concat(editScraperId));const scraperConfigId=scraperRes.data.scraper_config_id;// Update scraper config\nawait axios.put(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId),{trim_input:trimOutput,group_row_count:groupRows});// Delete existing tags and post new tags\nawait axios.delete(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId,\"/tags\"));if(selectedTags.length>0){await axios.post(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId,\"/tags\"),{tag:selectedTags.map(tag=>tag.tag)});}// Delete existing row labels and post new row labels\nawait axios.delete(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId,\"/row-labels\"));if(rowLabels.length>0){await axios.post(\"\".concat(API_BASE_URL,\"/scraper-config/\").concat(scraperConfigId,\"/row-labels\"),{row_order:rowLabels.map((label,index)=>index),row_label:rowLabels.map(label=>label.row_label)});}setShowEditConfigModal(false);}catch(error){console.error('Error saving scraper config:',error);alert('Failed to save configuration. Please try again.');}};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{style:{padding:'20px',fontFamily:'Arial, sans-serif'},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Scraper API\"}),/*#__PURE__*/_jsx(\"button\",{onClick:openAddModal,style:{marginBottom:'20px',padding:'10px 15px',fontSize:'16px'},children:\"Add New Scraper\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchScrapers,style:{marginBottom:'20px',padding:'10px 15px',fontSize:'16px',marginLeft:'10px'},children:\"Refresh Scraper List\"}),loading?/*#__PURE__*/_jsx(\"p\",{children:\"Loading scrapers...\"}):/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'2px solid #ccc'},children:[/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left',padding:'8px'},children:\"Scraper Name\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left',padding:'8px'},children:\"Scraping URL\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left',padding:'8px'},children:\"Created On\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left',padding:'8px'},children:\"Last Updated On\"}),/*#__PURE__*/_jsx(\"th\",{style:{textAlign:'left',padding:'8px'},children:\"Options\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:scrapers.map(scraper=>/*#__PURE__*/_jsxs(\"tr\",{style:{borderBottom:'1px solid #eee'},children:[/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:scraper.scraper_name}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:scraper.scraping_url}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:scraper.created_on}),/*#__PURE__*/_jsx(\"td\",{style:{padding:'8px'},children:scraper.last_scraped_on||'N/A'}),/*#__PURE__*/_jsxs(\"td\",{style:{padding:'8px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>openEditModal(scraper),style:{marginRight:'10px'},children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(scraper.scraper_id),children:\"Delete\"})]})]},scraper.scraper_id))})]}),showAddModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:20,borderRadius:5,width:400},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Scraper\"}),warning&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:warning}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Scraper Name:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newScraperName,onChange:e=>setNewScraperName(e.target.value),style:{width:'100%',marginBottom:10}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Scraping URL:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newScrapingUrl,onChange:e=>setNewScrapingUrl(e.target.value),style:{width:'100%',marginBottom:10}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:closeAddModal,style:{marginRight:10},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddConfirm,children:\"Confirm\"})]})]})}),showEditModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:20,borderRadius:5,width:500},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Scraper\"}),warning&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:warning}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Scraper Name:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editScraperName,onChange:e=>setEditScraperName(e.target.value),style:{width:'100%',marginBottom:10}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Scraping URL:\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:editScrapingUrl,onChange:e=>setEditScrapingUrl(e.target.value),style:{width:'100%',marginBottom:10}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',marginBottom:10},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleTestScraper,children:\"Test Scraper\"}),/*#__PURE__*/_jsx(\"button\",{onClick:openEditConfigModal,children:\"Edit Configuration\"})]}),testResult&&/*#__PURE__*/_jsx(\"pre\",{style:{backgroundColor:'#eee',padding:10,maxHeight:200,overflowY:'auto'},children:typeof testResult==='object'?JSON.stringify(testResult,null,2):testResult}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:closeEditModal,style:{marginRight:10},children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEditConfirm,children:\"Confirm\"})]})]})}),showEditConfigModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:20,borderRadius:5,width:600,maxHeight:'80vh',overflowY:'auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Configuration\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:10,display:'flex',alignItems:'center',gap:'10px'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Trim Output:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:trimOutput,onChange:e=>setTrimOutput(e.target.value),placeholder:\"Enter tag to trim output, e.g. <div class='content'>\",style:{flexGrow:1}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:10},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Selected Tags:\"}),/*#__PURE__*/_jsx(\"ul\",{style:{maxHeight:'100px',overflowY:'auto',border:'1px solid #ccc',padding:'5px'},children:selectedTags.map(tag=>/*#__PURE__*/_jsx(\"li\",{children:tag.tag},tag.tag))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:10},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Group Rows:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",value:groupRows,onChange:e=>setGroupRows(Number(e.target.value)),style:{width:'100px'}})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:10},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Row Labels:\"}),/*#__PURE__*/_jsx(\"ol\",{style:{maxHeight:'150px',overflowY:'auto',border:'1px solid #ccc',padding:'5px'},children:rowLabels.map(label=>/*#__PURE__*/_jsxs(\"li\",{children:[label.row_order,\". \",label.row_label]},label.scraper_config_row_label_id))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',gap:'10px',marginBottom:10},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setOutputFormatHtml(!outputFormatHtml),children:outputFormatHtml?'HTML':'JSON'}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowOutput(!showOutput),children:showOutput?'Hide':'Show'}),/*#__PURE__*/_jsx(\"button\",{onClick:refreshOutput,children:\"Refresh\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowSelectTagsModal(true),children:\"Select Tags\"}),/*#__PURE__*/_jsx(\"button\",{onClick:openSetLabelsModal,children:\"Set Labels\"})]}),showOutput&&/*#__PURE__*/_jsx(\"pre\",{style:{backgroundColor:'#eee',padding:10,maxHeight:200,overflowY:'auto',whiteSpace:'pre-wrap'},children:outputFormatHtml?refreshOutputHtml:JSON.stringify(refreshOutputJson,null,2)}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleConfirmConfig,children:\"Confirm\"}),/*#__PURE__*/_jsx(\"button\",{onClick:closeEditConfigModal,children:\"Close\"})]})]})}),showSelectTagsModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:20,borderRadius:5,width:'90vw',maxHeight:'80vh',overflowY:'auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Select Tags\"}),/*#__PURE__*/_jsxs(\"table\",{style:{width:'100%',borderCollapse:'collapse'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',width:'25%'},children:\"Tag\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px'},children:\"Occurrences\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',width:'35%'},children:\"Example Output\"}),/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px'},children:\"Select Tag\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:availableTags.map(tag=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'8px'},children:tag.tag}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'8px'},children:tag.count}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'8px'},children:tag.example_output}),/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'8px'},children:/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",checked:selectedTagIds.has(tag.tag),onChange:()=>toggleTagSelection(tag.tag)})})]},tag.tag))})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:10,display:'flex',justifyContent:'flex-end',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:cancelTagSelection,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:confirmTagSelection,children:\"Confirm\"})]})]})}),showSetLabelsModal&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0,0,0,0.5)',display:'flex',justifyContent:'center',alignItems:'center'},children:/*#__PURE__*/_jsxs(\"div\",{style:{backgroundColor:'white',padding:20,borderRadius:5,width:400,maxHeight:'80vh',overflowY:'auto'},children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Set Labels\"}),/*#__PURE__*/_jsx(\"ol\",{style:{paddingLeft:'20px'},children:labelInputs.map((value,index)=>/*#__PURE__*/_jsx(\"li\",{style:{marginBottom:'10px'},children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:value,onChange:e=>handleLabelInputChange(index,e.target.value),style:{width:'100%'}})},\"label-input-\".concat(index)))}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'flex-end',gap:'10px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:cancelSetLabels,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:confirmSetLabels,children:\"Confirm\"})]})]})})]})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","App","scrapers","setScrapers","loading","setLoading","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showEditConfigModal","setShowEditConfigModal","newScraperName","setNewScraperName","newScrapingUrl","setNewScrapingUrl","warning","setWarning","editScraperId","setEditScraperId","editScraperName","setEditScraperName","editScrapingUrl","setEditScrapingUrl","testResult","setTestResult","trimOutput","setTrimOutput","refreshOutputHtml","setRefreshOutputHtml","refreshOutputJson","setRefreshOutputJson","showOutput","setShowOutput","outputFormatHtml","setOutputFormatHtml","selectedTags","setSelectedTags","groupRows","setGroupRows","rowLabels","setRowLabels","showSelectTagsModal","setShowSelectTagsModal","availableTags","setAvailableTags","selectedTagIds","setSelectedTagIds","Set","showSetLabelsModal","setShowSetLabelsModal","labelInputs","setLabelInputs","fetchScrapers","response","get","concat","data","error","console","handleDelete","id","window","confirm","delete","scraper_id","openAddModal","closeAddModal","openEditModal","scraper","scraper_name","scraping_url","closeEditModal","isValidUrl","url","URL","_","handleAddConfirm","trim","post","handleEditConfirm","put","handleTestScraper","openEditConfigModal","closeEditConfigModal","parseTrimOutput","tagMatch","match","tagName","attrString","attrs","classMatch","class","split","filterRawData","parsed","filtered","Object","keys","forEach","key","includes","length","fetchScraperConfigDetails","scraperId","scraperRes","scraperConfigId","scraper_config_id","configRes","config","trim_input","group_row_count","tagsRes","Array","isArray","rowLabelsRes","sortedRowLabels","sort","a","b","row_order","refreshOutput","params","trim_tag","tag","tags","push","label","row_labels","row_label","jsonRes","_objectSpread","output_format","htmlRes","fetchTags","res","descendentTags","descendent_tags","combinedTags","uniqueTagsMap","Map","t","has","set","uniqueTags","from","values","occurrencesMap","count","raw_html","RegExp","tagsWithOccurrences","map","occurrences","currentSelected","toggleTagSelection","newSelected","add","confirmTagSelection","newSelectedTags","filter","cancelTagSelection","openSetLabelsModal","inputs","i","_rowLabels$i","handleLabelInputChange","index","value","newInputs","confirmSetLabels","newRowLabels","cancelSetLabels","handleConfirmConfig","alert","children","style","padding","fontFamily","onClick","marginBottom","fontSize","marginLeft","width","borderCollapse","borderBottom","textAlign","created_on","last_scraped_on","marginRight","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","borderRadius","color","type","onChange","e","target","gap","maxHeight","overflowY","JSON","stringify","placeholder","flexGrow","border","Number","scraper_config_row_label_id","whiteSpace","example_output","checked","marginTop","paddingLeft"],"sources":["/Users/will-liao/Desktop/Coding/web-scraping-api-3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [scrapers, setScrapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showEditConfigModal, setShowEditConfigModal] = useState(false);\n  const [newScraperName, setNewScraperName] = useState('');\n  const [newScrapingUrl, setNewScrapingUrl] = useState('');\n  const [warning, setWarning] = useState('');\n  const [editScraperId, setEditScraperId] = useState(null);\n  const [editScraperName, setEditScraperName] = useState('');\n  const [editScrapingUrl, setEditScrapingUrl] = useState('');\n  const [testResult, setTestResult] = useState(null);\n  const [trimOutput, setTrimOutput] = useState('');\n\n  // New states for Refresh output and toggles\n  const [refreshOutputHtml, setRefreshOutputHtml] = useState('');\n  const [refreshOutputJson, setRefreshOutputJson] = useState(null);\n  const [showOutput, setShowOutput] = useState(true);\n  const [outputFormatHtml, setOutputFormatHtml] = useState(true); // true=HTML, false=JSON\n\n  // New states for added fields\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [groupRows, setGroupRows] = useState(0);\n  const [rowLabels, setRowLabels] = useState([]);\n\n  // New states for Select Tags modal\n  const [showSelectTagsModal, setShowSelectTagsModal] = useState(false);\n  const [availableTags, setAvailableTags] = useState([]);\n  const [selectedTagIds, setSelectedTagIds] = useState(new Set());\n\n  // New state for Set Labels modal and input values\n  const [showSetLabelsModal, setShowSetLabelsModal] = useState(false);\n  const [labelInputs, setLabelInputs] = useState([]);\n\n  useEffect(() => {\n    fetchScrapers();\n  }, []);\n\n  const fetchScrapers = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers`);\n      setScrapers(response.data);\n    } catch (error) {\n      console.error('Error fetching scrapers:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this scraper?')) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/scrapers`, { data: { scraper_id: id } });\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error deleting scraper:', error);\n    }\n  };\n\n  const openAddModal = () => {\n    setWarning('');\n    setNewScraperName('');\n    setNewScrapingUrl('');\n    setShowAddModal(true);\n  };\n\n  const closeAddModal = () => {\n    setShowAddModal(false);\n  };\n\n  const openEditModal = (scraper) => {\n    setWarning('');\n    setEditScraperId(scraper.scraper_id);\n    setEditScraperName(scraper.scraper_name);\n    setEditScrapingUrl(scraper.scraping_url);\n    setTestResult(null);\n    setShowEditModal(true);\n  };\n\n  const closeEditModal = () => {\n    setShowEditModal(false);\n  };\n\n  const isValidUrl = (url) => {\n    try {\n      new URL(url);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const handleAddConfirm = async () => {\n    if (!newScraperName.trim() || !newScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n\n    if (!isValidUrl(newScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n\n    try {\n      await axios.post(`${API_BASE_URL}/scrapers`, {\n        scraper_name: newScraperName,\n        scraping_url: newScrapingUrl\n      });\n      closeAddModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error creating scraper:', error);\n      setWarning('Failed to create scraper. Please try again.');\n    }\n  };\n\n  const handleEditConfirm = async () => {\n    if (!editScraperName.trim() || !editScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n\n    if (!isValidUrl(editScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n\n    try {\n      await axios.put(`${API_BASE_URL}/scrapers`, {\n        scraper_id: editScraperId,\n        scraper_name: editScraperName,\n        scraping_url: editScrapingUrl\n      });\n      closeEditModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error updating scraper:', error);\n      setWarning('Failed to update scraper. Please try again.');\n    }\n  };\n\n  const handleTestScraper = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrape/${editScraperId}`);\n      setTestResult(response.data);\n    } catch (error) {\n      console.error('Error testing scraper:', error);\n      setTestResult({ error: 'Failed to test scraper.' });\n    }\n  };\n\n  const openEditConfigModal = () => {\n    setShowEditConfigModal(true);\n  };\n\n  const closeEditConfigModal = () => {\n    setShowEditConfigModal(false);\n  };\n\n  // Function to parse trim output tag like backend parse_trim_input\n  const parseTrimOutput = (trim) => {\n    const tagMatch = trim.match(/^<(\\w+)([^>]*)>/);\n    if (!tagMatch) return null;\n    const tagName = tagMatch[1];\n    const attrString = tagMatch[2].trim();\n    const attrs = {};\n    if (attrString) {\n      const classMatch = attrString.match(/class=[\"']([^\"']+)[\"']/);\n      if (classMatch) {\n        attrs.class = classMatch[1].split(' ');\n      }\n    }\n    return { tagName, attrs };\n  };\n\n  // Function to filter raw data based on trim output tag\n  const filterRawData = (data, trim) => {\n    if (!trim || !data) return data;\n    const parsed = parseTrimOutput(trim);\n    if (!parsed) return data;\n\n    // For simplicity, if rawData is an object with html/text, filter keys containing tagName\n    // This is a placeholder; real filtering depends on rawData structure\n    if (typeof data === 'object') {\n      // Example: filter keys containing tagName\n      const filtered = {};\n      Object.keys(data).forEach(key => {\n        if (key.includes(parsed.tagName)) {\n          filtered[key] = data[key];\n        }\n      });\n      return Object.keys(filtered).length > 0 ? filtered : data;\n    }\n    return data;\n  };\n\n  // Fetch scraper config details including new fields\n  const fetchScraperConfigDetails = async (scraperId) => {\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${scraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Fetch scraper config\n      const configRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}`);\n      const config = configRes.data;\n      setTrimOutput(config.trim_input || '');\n      setGroupRows(config.group_row_count || 1); // default to 1 if falsy\n\n      // Fetch selected tags\n      const tagsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`);\n      setSelectedTags(Array.isArray(tagsRes.data) ? tagsRes.data : []);\n\n      // Fetch row labels\n      const rowLabelsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`);\n      // Sort row labels by row_order\n      const sortedRowLabels = rowLabelsRes.data.sort((a, b) => a.row_order - b.row_order);\n      setRowLabels(sortedRowLabels);\n\n    } catch (error) {\n      console.error('Error fetching scraper config details:', error);\n      setTrimOutput('');\n      setSelectedTags([]);\n      setGroupRows(1); // default to 1 on error\n      setRowLabels([]);\n    }\n  };\n\n  // Refresh output by calling /raw endpoint in scraper_routes with optional parameters\n  const refreshOutput = async () => {\n    if (!editScraperId) return;\n\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Prepare optional parameters\n      const params = {};\n      if (trimOutput) params.trim_tag = trimOutput;\n      if (groupRows) params.group_row_count = groupRows;\n\n      // Send tags and row_labels as repeated parameters without square brackets\n      if (selectedTags.length > 0) {\n        selectedTags.forEach((tag) => {\n          if (!params.tags) params.tags = [];\n          params.tags.push(tag.tag);\n        });\n      }\n      if (rowLabels.length > 0) {\n        rowLabels.forEach((label) => {\n          if (!params.row_labels) params.row_labels = [];\n          params.row_labels.push(label.row_label);\n        });\n      }\n\n      // Call /raw endpoint with json output\n      const jsonRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, { params: { ...params, output_format: 'json' } });\n      setRefreshOutputJson(jsonRes.data);\n\n      // Call /raw endpoint with html output\n      const htmlRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, { params: { ...params, output_format: 'html' } });\n      setRefreshOutputHtml(htmlRes.data || '');\n\n    } catch (error) {\n      console.error('Error refreshing output:', error);\n      setRefreshOutputJson(null);\n      setRefreshOutputHtml('');\n    }\n  };\n\n  // Call fetchScraperConfigDetails when Edit Configuration modal opens\n  useEffect(() => {\n    if (showEditConfigModal && editScraperId) {\n      fetchScraperConfigDetails(editScraperId);\n    }\n  }, [showEditConfigModal, editScraperId]);\n\n  // Fetch available tags when Select Tags modal opens\n  useEffect(() => {\n    if (showSelectTagsModal && editScraperId) {\n      const fetchTags = async () => {\n        try {\n          const params = {};\n          if (trimOutput) params.trim_tag = trimOutput;\n          const res = await axios.get(`${API_BASE_URL}/raw/${editScraperId}/tags`, { params });\n          const tags = res.data.tags || [];\n          const descendentTags = res.data.descendent_tags || [];\n          // Combine tags and descendent tags\n          const combinedTags = [...tags, ...descendentTags];\n\n          // Remove duplicates by tag name\n          const uniqueTagsMap = new Map();\n          combinedTags.forEach(t => {\n            if (!uniqueTagsMap.has(t.tag)) {\n              uniqueTagsMap.set(t.tag, t);\n            }\n          });\n          const uniqueTags = Array.from(uniqueTagsMap.values());\n\n          // Calculate occurrences for each tag\n          const occurrencesMap = new Map();\n          uniqueTags.forEach(t => {\n            const count = res.data.raw_html ? (res.data.raw_html.match(new RegExp(`<${t.tag}[^>]*>`, 'g')) || []).length : 0;\n            occurrencesMap.set(t.tag, count);\n          });\n\n          // Add occurrences to each tag object\n          const tagsWithOccurrences = uniqueTags.map(t => ({ ...t, occurrences: occurrencesMap.get(t.tag) || 0 }));\n\n          setAvailableTags(tagsWithOccurrences);\n\n          // Initialize selectedTagIds from current selectedTags\n          const currentSelected = new Set(selectedTags.map(t => t.tag));\n          setSelectedTagIds(currentSelected);\n        } catch (error) {\n          console.error('Error fetching available tags:', error);\n          setAvailableTags([]);\n        }\n      };\n      fetchTags();\n    }\n  }, [showSelectTagsModal, editScraperId]);\n\n  const toggleTagSelection = (tag) => {\n    const newSelected = new Set(selectedTagIds);\n    if (newSelected.has(tag)) {\n      newSelected.delete(tag);\n    } else {\n      newSelected.add(tag);\n    }\n    setSelectedTagIds(newSelected);\n  };\n\n  const confirmTagSelection = () => {\n    // Update selectedTags state with selected tags\n    const newSelectedTags = availableTags.filter(t => selectedTagIds.has(t.tag)).map(t => ({ tag: t.tag }));\n    setSelectedTags(Array.isArray(newSelectedTags) ? newSelectedTags : []);\n    setShowSelectTagsModal(false);\n  };\n\n  const cancelTagSelection = () => {\n    setShowSelectTagsModal(false);\n  };\n\n  // Open Set Labels modal and initialize inputs based on groupRows\n  const openSetLabelsModal = () => {\n    const count = groupRows > 0 ? groupRows : 1;\n    const inputs = [];\n    for (let i = 0; i < count; i++) {\n      inputs.push(rowLabels[i]?.row_label || '');\n    }\n    setLabelInputs(inputs);\n    setShowSetLabelsModal(true);\n  };\n\n  // Handle input change in Set Labels modal\n  const handleLabelInputChange = (index, value) => {\n    const newInputs = [...labelInputs];\n    newInputs[index] = value;\n    setLabelInputs(newInputs);\n  };\n\n  // Confirm Set Labels modal and update rowLabels state\n  const confirmSetLabels = () => {\n    const newRowLabels = labelInputs.map((label, index) => ({ row_order: index + 1, row_label: label }));\n    setRowLabels(newRowLabels);\n    setShowSetLabelsModal(false);\n  };\n\n  // Cancel Set Labels modal\n  const cancelSetLabels = () => {\n    setShowSetLabelsModal(false);\n  };\n\n  const handleConfirmConfig = async () => {\n    if (!editScraperId) return;\n\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Update scraper config\n      await axios.put(`${API_BASE_URL}/scraper-config/${scraperConfigId}`, {\n        trim_input: trimOutput,\n        group_row_count: groupRows\n      });\n\n      // Delete existing tags and post new tags\n      await axios.delete(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`);\n      if (selectedTags.length > 0) {\n        await axios.post(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`, {\n          tag: selectedTags.map(tag => tag.tag)\n        });\n      }\n\n      // Delete existing row labels and post new row labels\n      await axios.delete(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`);\n      if (rowLabels.length > 0) {\n        await axios.post(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`, {\n          row_order: rowLabels.map((label, index) => index),\n          row_label: rowLabels.map(label => label.row_label)\n        });\n      }\n\n      setShowEditConfigModal(false);\n    } catch (error) {\n      console.error('Error saving scraper config:', error);\n      alert('Failed to save configuration. Please try again.');\n    }\n  };\n\n  return (\n    <>\n      <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n        <h1>Scraper API</h1>\n        <button onClick={openAddModal} style={{ marginBottom: '20px', padding: '10px 15px', fontSize: '16px' }}>\n          Add New Scraper\n        </button>\n        <button onClick={fetchScrapers} style={{ marginBottom: '20px', padding: '10px 15px', fontSize: '16px', marginLeft: '10px' }}>\n          Refresh Scraper List\n        </button>\n        {loading ? (\n          <p>Loading scrapers...</p>\n        ) : (\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr style={{ borderBottom: '2px solid #ccc' }}>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Scraper Name</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Scraping URL</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Created On</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Last Updated On</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Options</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scrapers.map(scraper => (\n                <tr key={scraper.scraper_id} style={{ borderBottom: '1px solid #eee' }}>\n                  <td style={{ padding: '8px' }}>{scraper.scraper_name}</td>\n                  <td style={{ padding: '8px' }}>{scraper.scraping_url}</td>\n                  <td style={{ padding: '8px' }}>{scraper.created_on}</td>\n                  <td style={{ padding: '8px' }}>{scraper.last_scraped_on || 'N/A'}</td>\n                  <td style={{ padding: '8px' }}>\n                    <button onClick={() => openEditModal(scraper)} style={{ marginRight: '10px' }}>\n                      Edit\n                    </button>\n                    <button onClick={() => handleDelete(scraper.scraper_id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        {/* Add New Scraper Modal */}\n        {showAddModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 400 }}>\n              <h2>Add New Scraper</h2>\n              {warning && <p style={{ color: 'red' }}>{warning}</p>}\n              <div>\n                <label>Scraper Name:</label><br />\n                <input\n                  type=\"text\"\n                  value={newScraperName}\n                  onChange={(e) => setNewScraperName(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div>\n                <label>Scraping URL:</label><br />\n                <input\n                  type=\"text\"\n                  value={newScrapingUrl}\n                  onChange={(e) => setNewScrapingUrl(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button onClick={closeAddModal} style={{ marginRight: 10 }}>\n                  Cancel\n                </button>\n                <button onClick={handleAddConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Scraper Modal */}\n        {showEditModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 500 }}>\n              <h2>Edit Scraper</h2>\n              {warning && <p style={{ color: 'red' }}>{warning}</p>}\n              <div>\n                <label>Scraper Name:</label><br />\n                <input\n                  type=\"text\"\n                  value={editScraperName}\n                  onChange={(e) => setEditScraperName(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div>\n                <label>Scraping URL:</label><br />\n                <input\n                  type=\"text\"\n                  value={editScrapingUrl}\n                  onChange={(e) => setEditScrapingUrl(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div style={{ display: 'flex', gap: '10px', marginBottom: 10 }}>\n                <button onClick={handleTestScraper}>\n                  Test Scraper\n                </button>\n                <button onClick={openEditConfigModal}>\n                  Edit Configuration\n                </button>\n              </div>\n              {testResult && (\n                <pre style={{ backgroundColor: '#eee', padding: 10, maxHeight: 200, overflowY: 'auto' }}>\n                  {typeof testResult === 'object' ? JSON.stringify(testResult, null, 2) : testResult}\n                </pre>\n              )}\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button onClick={closeEditModal} style={{ marginRight: 10 }}>\n                  Cancel\n                </button>\n                <button onClick={handleEditConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Configuration Modal */}\n        {showEditConfigModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 600, maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Edit Configuration</h2>\n              <div style={{ marginBottom: 10, display: 'flex', alignItems: 'center', gap: '10px' }}>\n                <label>Trim Output:</label>\n                <input\n                  type=\"text\"\n                  value={trimOutput}\n                  onChange={(e) => setTrimOutput(e.target.value)}\n                  placeholder=\"Enter tag to trim output, e.g. <div class='content'>\"\n                  style={{ flexGrow: 1 }}\n                />\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Selected Tags:</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'auto', border: '1px solid #ccc', padding: '5px' }}>\n                  {selectedTags.map(tag => (\n                    <li key={tag.tag}>{tag.tag}</li>\n                  ))}\n                </ul>\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Group Rows:</label>\n                <input\n                  type=\"number\"\n                  value={groupRows}\n                  onChange={(e) => setGroupRows(Number(e.target.value))}\n                  style={{ width: '100px' }}\n                />\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Row Labels:</label>\n                <ol style={{ maxHeight: '150px', overflowY: 'auto', border: '1px solid #ccc', padding: '5px' }}>\n                  {rowLabels.map(label => (\n                    <li key={label.scraper_config_row_label_id}>\n                      {label.row_order}. {label.row_label}\n                    </li>\n                  ))}\n                </ol>\n              </div>\n\n              {/* New toggles and buttons */}\n              <div style={{ display: 'flex', gap: '10px', marginBottom: 10 }}>\n                <button onClick={() => setOutputFormatHtml(!outputFormatHtml)}>\n                  {outputFormatHtml ? 'HTML' : 'JSON'}\n                </button>\n                <button onClick={() => setShowOutput(!showOutput)}>\n                  {showOutput ? 'Hide' : 'Show'}\n                </button>\n                <button onClick={refreshOutput}>\n                  Refresh\n                </button>             \n                <button onClick={() => setShowSelectTagsModal(true)}>\n                  Select Tags\n                </button>\n                <button onClick={openSetLabelsModal}>\n                  Set Labels\n                </button>\n              </div>\n\n              {/* Output display box */}\n              {showOutput && (\n                <pre style={{ backgroundColor: '#eee', padding: 10, maxHeight: 200, overflowY: 'auto', whiteSpace: 'pre-wrap' }}>\n                  {outputFormatHtml ? refreshOutputHtml : JSON.stringify(refreshOutputJson, null, 2)}\n                </pre>\n              )}\n\n              <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n                <button onClick={handleConfirmConfig}>\n                  Confirm\n                </button>\n                <button onClick={closeEditConfigModal}>\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Select Tags Modal */}\n        {showSelectTagsModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: '90vw', maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Select Tags</h2>\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                <thead>\n                  <tr>\n                    <th style={{ border: '1px solid #ccc', padding: '8px', width: '25%' }}>Tag</th>\n                    <th style={{ border: '1px solid #ccc', padding: '8px' }}>Occurrences</th>\n                    <th style={{ border: '1px solid #ccc', padding: '8px', width: '35%' }}>Example Output</th>\n                    <th style={{ border: '1px solid #ccc', padding: '8px' }}>Select Tag</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {availableTags.map((tag) => (\n                    <tr key={tag.tag}>\n                      <td style={{ border: '1px solid #ccc', padding: '8px' }}>{tag.tag}</td>\n                      <td style={{ border: '1px solid #ccc', padding: '8px' }}>{tag.count}</td>\n                      <td style={{ border: '1px solid #ccc', padding: '8px' }}>{tag.example_output}</td>\n                      <td style={{ border: '1px solid #ccc', padding: '8px' }}>\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedTagIds.has(tag.tag)}\n                          onChange={() => toggleTagSelection(tag.tag)}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n\n              <div style={{ marginTop: 10, display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n                <button onClick={cancelTagSelection}>Cancel</button>\n                <button onClick={confirmTagSelection}>Confirm</button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Set Labels Modal */}\n        {showSetLabelsModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 400, maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Set Labels</h2>\n              <ol style={{ paddingLeft: '20px' }}>\n                {labelInputs.map((value, index) => (\n                  <li key={`label-input-${index}`} style={{ marginBottom: '10px' }}>\n                    <input\n                      type=\"text\"\n                      value={value}\n                      onChange={(e) => handleLabelInputChange(index, e.target.value)}\n                      style={{ width: '100%' }}\n                    />\n                  </li>\n                ))}\n              </ol>\n              <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n                <button onClick={cancelSetLabels}>Cancel</button>\n                <button onClick={confirmSetLabels}>Confirm</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}