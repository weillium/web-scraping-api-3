{"ast":null,"code":"var _jsxFileName = \"/Users/will-liao/Desktop/Coding/web-scraping-api-3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [scrapers, setScrapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showEditConfigModal, setShowEditConfigModal] = useState(false);\n  const [newScraperName, setNewScraperName] = useState('');\n  const [newScrapingUrl, setNewScrapingUrl] = useState('');\n  const [warning, setWarning] = useState('');\n  const [editScraperId, setEditScraperId] = useState(null);\n  const [editScraperName, setEditScraperName] = useState('');\n  const [editScrapingUrl, setEditScrapingUrl] = useState('');\n  const [testResult, setTestResult] = useState(null);\n  const [trimOutput, setTrimOutput] = useState('');\n\n  // New states for Refresh output and toggles\n  const [refreshOutputHtml, setRefreshOutputHtml] = useState('');\n  const [refreshOutputJson, setRefreshOutputJson] = useState(null);\n  const [showOutput, setShowOutput] = useState(true);\n  const [outputFormatHtml, setOutputFormatHtml] = useState(true); // true=HTML, false=JSON\n\n  // New states for added fields\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [groupRows, setGroupRows] = useState(0);\n  const [rowLabels, setRowLabels] = useState([]);\n  useEffect(() => {\n    fetchScrapers();\n  }, []);\n  const fetchScrapers = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers`);\n      setScrapers(response.data);\n    } catch (error) {\n      console.error('Error fetching scrapers:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this scraper?')) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/scrapers`, {\n        data: {\n          scraper_id: id\n        }\n      });\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error deleting scraper:', error);\n    }\n  };\n  const openAddModal = () => {\n    setWarning('');\n    setNewScraperName('');\n    setNewScrapingUrl('');\n    setShowAddModal(true);\n  };\n  const closeAddModal = () => {\n    setShowAddModal(false);\n  };\n  const openEditModal = scraper => {\n    setWarning('');\n    setEditScraperId(scraper.scraper_id);\n    setEditScraperName(scraper.scraper_name);\n    setEditScrapingUrl(scraper.scraping_url);\n    setTestResult(null);\n    setShowEditModal(true);\n  };\n  const closeEditModal = () => {\n    setShowEditModal(false);\n  };\n  const isValidUrl = url => {\n    try {\n      new URL(url);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  const handleAddConfirm = async () => {\n    if (!newScraperName.trim() || !newScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n    if (!isValidUrl(newScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE_URL}/scrapers`, {\n        scraper_name: newScraperName,\n        scraping_url: newScrapingUrl\n      });\n      closeAddModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error creating scraper:', error);\n      setWarning('Failed to create scraper. Please try again.');\n    }\n  };\n  const handleEditConfirm = async () => {\n    if (!editScraperName.trim() || !editScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n    if (!isValidUrl(editScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n    try {\n      await axios.put(`${API_BASE_URL}/scrapers`, {\n        scraper_id: editScraperId,\n        scraper_name: editScraperName,\n        scraping_url: editScrapingUrl\n      });\n      closeEditModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error updating scraper:', error);\n      setWarning('Failed to update scraper. Please try again.');\n    }\n  };\n  const handleTestScraper = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}/scrape`);\n      setTestResult(response.data);\n    } catch (error) {\n      console.error('Error testing scraper:', error);\n      setTestResult({\n        error: 'Failed to test scraper.'\n      });\n    }\n  };\n  const openEditConfigModal = () => {\n    setShowEditConfigModal(true);\n  };\n  const closeEditConfigModal = () => {\n    setShowEditConfigModal(false);\n  };\n\n  // Function to parse trim output tag like backend parse_trim_input\n  const parseTrimOutput = trim => {\n    const tagMatch = trim.match(/^<(\\w+)([^>]*)>/);\n    if (!tagMatch) return null;\n    const tagName = tagMatch[1];\n    const attrString = tagMatch[2].trim();\n    const attrs = {};\n    if (attrString) {\n      const classMatch = attrString.match(/class=[\"']([^\"']+)[\"']/);\n      if (classMatch) {\n        attrs.class = classMatch[1].split(' ');\n      }\n    }\n    return {\n      tagName,\n      attrs\n    };\n  };\n\n  // Function to filter raw data based on trim output tag\n  const filterRawData = (data, trim) => {\n    if (!trim || !data) return data;\n    const parsed = parseTrimOutput(trim);\n    if (!parsed) return data;\n\n    // For simplicity, if rawData is an object with html/text, filter keys containing tagName\n    // This is a placeholder; real filtering depends on rawData structure\n    if (typeof data === 'object') {\n      // Example: filter keys containing tagName\n      const filtered = {};\n      Object.keys(data).forEach(key => {\n        if (key.includes(parsed.tagName)) {\n          filtered[key] = data[key];\n        }\n      });\n      return Object.keys(filtered).length > 0 ? filtered : data;\n    }\n    return data;\n  };\n\n  // Fetch scraper config details including new fields\n  const fetchScraperConfigDetails = async scraperId => {\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${scraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Fetch scraper config\n      const configRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}`);\n      const config = configRes.data;\n      setTrimOutput(config.trim_input || '');\n      setGroupRows(config.group_row_count || 0);\n\n      // Fetch selected tags\n      const tagsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`);\n      setSelectedTags(tagsRes.data || []);\n\n      // Fetch row labels\n      const rowLabelsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`);\n      // Sort row labels by row_order\n      const sortedRowLabels = rowLabelsRes.data.sort((a, b) => a.row_order - b.row_order);\n      setRowLabels(sortedRowLabels);\n    } catch (error) {\n      console.error('Error fetching scraper config details:', error);\n      setTrimOutput('');\n      setSelectedTags([]);\n      setGroupRows(0);\n      setRowLabels([]);\n    }\n  };\n\n  // Refresh output by calling /raw endpoint in scraper_routes with optional parameters\n  const refreshOutput = async () => {\n    if (!editScraperId) return;\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Prepare optional parameters\n      const params = {};\n      if (trimOutput) params.trim_tag = trimOutput;\n      if (groupRows) params.group_row_count = groupRows;\n      if (selectedTags.length > 0) params.tags = selectedTags.map(tag => tag.tag);\n      if (rowLabels.length > 0) params.row_labels = rowLabels.map(label => label.row_label);\n\n      // Call /raw endpoint with json output\n      const jsonRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, {\n        params: {\n          ...params,\n          output_format: 'json'\n        }\n      });\n      setRefreshOutputJson(jsonRes.data);\n\n      // Call /raw endpoint with html output\n      const htmlRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, {\n        params: {\n          ...params,\n          output_format: 'html'\n        }\n      });\n      setRefreshOutputHtml(htmlRes.data.raw_html || '');\n    } catch (error) {\n      console.error('Error refreshing output:', error);\n      setRefreshOutputJson(null);\n      setRefreshOutputHtml('');\n    }\n  };\n\n  // Call fetchScraperConfigDetails when Edit Configuration modal opens\n  useEffect(() => {\n    if (showEditConfigModal && editScraperId) {\n      fetchScraperConfigDetails(editScraperId);\n    }\n  }, [showEditConfigModal, editScraperId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scraper API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openAddModal,\n        style: {\n          marginBottom: '20px',\n          padding: '10px 15px',\n          fontSize: '16px'\n        },\n        children: \"Add New Scraper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchScrapers,\n        style: {\n          marginBottom: '20px',\n          padding: '10px 15px',\n          fontSize: '16px',\n          marginLeft: '10px'\n        },\n        children: \"Refresh Scraper List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading scrapers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '2px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Scraper Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Scraping URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Created On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Last Updated On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scrapers.map(scraper => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '1px solid #eee'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.scraper_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.scraping_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.created_on\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.last_scraped_on || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openEditModal(scraper),\n                style: {\n                  marginRight: '10px'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(scraper.scraper_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this)]\n          }, scraper.scraper_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 11\n      }, this), showAddModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Scraper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 15\n          }, this), warning && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraper Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newScraperName,\n              onChange: e => setNewScraperName(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraping URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newScrapingUrl,\n              onChange: e => setNewScrapingUrl(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeAddModal,\n              style: {\n                marginRight: 10\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Scraper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this), warning && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraper Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editScraperName,\n              onChange: e => setEditScraperName(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraping URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editScrapingUrl,\n              onChange: e => setEditScrapingUrl(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTestScraper,\n              children: \"Test Scraper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: openEditConfigModal,\n              children: \"Edit Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this), testResult && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#eee',\n              padding: 10,\n              maxHeight: 200,\n              overflowY: 'auto'\n            },\n            children: typeof testResult === 'object' ? JSON.stringify(testResult, null, 2) : testResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeEditModal,\n              style: {\n                marginRight: 10\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 11\n      }, this), showEditConfigModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 600,\n            maxHeight: '80vh',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10,\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Trim Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: trimOutput,\n              onChange: e => setTrimOutput(e.target.value),\n              placeholder: \"Enter tag to trim output, e.g. <div class='content'>\",\n              style: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Selected Tags:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                maxHeight: '100px',\n                overflowY: 'auto',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              children: selectedTags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: tag.tag\n              }, tag.scraper_config_tag_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Group Rows:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: groupRows,\n              onChange: e => setGroupRows(Number(e.target.value)),\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Row Labels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              style: {\n                maxHeight: '150px',\n                overflowY: 'auto',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              children: rowLabels.map(label => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [label.row_order, \". \", label.row_label]\n              }, label.scraper_config_row_label_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setOutputFormatHtml(!outputFormatHtml),\n              children: outputFormatHtml ? 'HTML' : 'JSON'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowOutput(!showOutput),\n              children: showOutput ? 'Hide' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: refreshOutput,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 15\n          }, this), showOutput && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#eee',\n              padding: 10,\n              maxHeight: 200,\n              overflowY: 'auto',\n              whiteSpace: 'pre-wrap'\n            },\n            children: outputFormatHtml ? refreshOutputHtml : JSON.stringify(refreshOutputJson, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeEditConfigModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: refreshOutput,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"7xW4mg0ZFnsTwKDAP9HWTXqWghI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","App","_s","scrapers","setScrapers","loading","setLoading","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showEditConfigModal","setShowEditConfigModal","newScraperName","setNewScraperName","newScrapingUrl","setNewScrapingUrl","warning","setWarning","editScraperId","setEditScraperId","editScraperName","setEditScraperName","editScrapingUrl","setEditScrapingUrl","testResult","setTestResult","trimOutput","setTrimOutput","refreshOutputHtml","setRefreshOutputHtml","refreshOutputJson","setRefreshOutputJson","showOutput","setShowOutput","outputFormatHtml","setOutputFormatHtml","selectedTags","setSelectedTags","groupRows","setGroupRows","rowLabels","setRowLabels","fetchScrapers","response","get","data","error","console","handleDelete","id","window","confirm","delete","scraper_id","openAddModal","closeAddModal","openEditModal","scraper","scraper_name","scraping_url","closeEditModal","isValidUrl","url","URL","_","handleAddConfirm","trim","post","handleEditConfirm","put","handleTestScraper","openEditConfigModal","closeEditConfigModal","parseTrimOutput","tagMatch","match","tagName","attrString","attrs","classMatch","class","split","filterRawData","parsed","filtered","Object","keys","forEach","key","includes","length","fetchScraperConfigDetails","scraperId","scraperRes","scraperConfigId","scraper_config_id","configRes","config","trim_input","group_row_count","tagsRes","rowLabelsRes","sortedRowLabels","sort","a","b","row_order","refreshOutput","params","trim_tag","tags","map","tag","row_labels","label","row_label","jsonRes","output_format","htmlRes","raw_html","children","style","padding","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","fontSize","marginLeft","width","borderCollapse","borderBottom","textAlign","created_on","last_scraped_on","marginRight","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","borderRadius","color","type","value","onChange","e","target","gap","maxHeight","overflowY","JSON","stringify","placeholder","flexGrow","border","scraper_config_tag_id","Number","scraper_config_row_label_id","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/will-liao/Desktop/Coding/web-scraping-api-3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [scrapers, setScrapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showEditConfigModal, setShowEditConfigModal] = useState(false);\n  const [newScraperName, setNewScraperName] = useState('');\n  const [newScrapingUrl, setNewScrapingUrl] = useState('');\n  const [warning, setWarning] = useState('');\n  const [editScraperId, setEditScraperId] = useState(null);\n  const [editScraperName, setEditScraperName] = useState('');\n  const [editScrapingUrl, setEditScrapingUrl] = useState('');\n  const [testResult, setTestResult] = useState(null);\n  const [trimOutput, setTrimOutput] = useState('');\n\n  // New states for Refresh output and toggles\n  const [refreshOutputHtml, setRefreshOutputHtml] = useState('');\n  const [refreshOutputJson, setRefreshOutputJson] = useState(null);\n  const [showOutput, setShowOutput] = useState(true);\n  const [outputFormatHtml, setOutputFormatHtml] = useState(true); // true=HTML, false=JSON\n\n  // New states for added fields\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [groupRows, setGroupRows] = useState(0);\n  const [rowLabels, setRowLabels] = useState([]);\n\n  useEffect(() => {\n    fetchScrapers();\n  }, []);\n\n  const fetchScrapers = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers`);\n      setScrapers(response.data);\n    } catch (error) {\n      console.error('Error fetching scrapers:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this scraper?')) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/scrapers`, { data: { scraper_id: id } });\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error deleting scraper:', error);\n    }\n  };\n\n  const openAddModal = () => {\n    setWarning('');\n    setNewScraperName('');\n    setNewScrapingUrl('');\n    setShowAddModal(true);\n  };\n\n  const closeAddModal = () => {\n    setShowAddModal(false);\n  };\n\n  const openEditModal = (scraper) => {\n    setWarning('');\n    setEditScraperId(scraper.scraper_id);\n    setEditScraperName(scraper.scraper_name);\n    setEditScrapingUrl(scraper.scraping_url);\n    setTestResult(null);\n    setShowEditModal(true);\n  };\n\n  const closeEditModal = () => {\n    setShowEditModal(false);\n  };\n\n  const isValidUrl = (url) => {\n    try {\n      new URL(url);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const handleAddConfirm = async () => {\n    if (!newScraperName.trim() || !newScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n\n    if (!isValidUrl(newScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n\n    try {\n      await axios.post(`${API_BASE_URL}/scrapers`, {\n        scraper_name: newScraperName,\n        scraping_url: newScrapingUrl\n      });\n      closeAddModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error creating scraper:', error);\n      setWarning('Failed to create scraper. Please try again.');\n    }\n  };\n\n  const handleEditConfirm = async () => {\n    if (!editScraperName.trim() || !editScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n\n    if (!isValidUrl(editScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n\n    try {\n      await axios.put(`${API_BASE_URL}/scrapers`, {\n        scraper_id: editScraperId,\n        scraper_name: editScraperName,\n        scraping_url: editScrapingUrl\n      });\n      closeEditModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error updating scraper:', error);\n      setWarning('Failed to update scraper. Please try again.');\n    }\n  };\n\n  const handleTestScraper = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}/scrape`);\n      setTestResult(response.data);\n    } catch (error) {\n      console.error('Error testing scraper:', error);\n      setTestResult({ error: 'Failed to test scraper.' });\n    }\n  };\n\n  const openEditConfigModal = () => {\n    setShowEditConfigModal(true);\n  };\n\n  const closeEditConfigModal = () => {\n    setShowEditConfigModal(false);\n  };\n\n  // Function to parse trim output tag like backend parse_trim_input\n  const parseTrimOutput = (trim) => {\n    const tagMatch = trim.match(/^<(\\w+)([^>]*)>/);\n    if (!tagMatch) return null;\n    const tagName = tagMatch[1];\n    const attrString = tagMatch[2].trim();\n    const attrs = {};\n    if (attrString) {\n      const classMatch = attrString.match(/class=[\"']([^\"']+)[\"']/);\n      if (classMatch) {\n        attrs.class = classMatch[1].split(' ');\n      }\n    }\n    return { tagName, attrs };\n  };\n\n  // Function to filter raw data based on trim output tag\n  const filterRawData = (data, trim) => {\n    if (!trim || !data) return data;\n    const parsed = parseTrimOutput(trim);\n    if (!parsed) return data;\n\n    // For simplicity, if rawData is an object with html/text, filter keys containing tagName\n    // This is a placeholder; real filtering depends on rawData structure\n    if (typeof data === 'object') {\n      // Example: filter keys containing tagName\n      const filtered = {};\n      Object.keys(data).forEach(key => {\n        if (key.includes(parsed.tagName)) {\n          filtered[key] = data[key];\n        }\n      });\n      return Object.keys(filtered).length > 0 ? filtered : data;\n    }\n    return data;\n  };\n\n  // Fetch scraper config details including new fields\n  const fetchScraperConfigDetails = async (scraperId) => {\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${scraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Fetch scraper config\n      const configRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}`);\n      const config = configRes.data;\n      setTrimOutput(config.trim_input || '');\n      setGroupRows(config.group_row_count || 0);\n\n      // Fetch selected tags\n      const tagsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`);\n      setSelectedTags(tagsRes.data || []);\n\n      // Fetch row labels\n      const rowLabelsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`);\n      // Sort row labels by row_order\n      const sortedRowLabels = rowLabelsRes.data.sort((a, b) => a.row_order - b.row_order);\n      setRowLabels(sortedRowLabels);\n\n    } catch (error) {\n      console.error('Error fetching scraper config details:', error);\n      setTrimOutput('');\n      setSelectedTags([]);\n      setGroupRows(0);\n      setRowLabels([]);\n    }\n  };\n\n  // Refresh output by calling /raw endpoint in scraper_routes with optional parameters\n  const refreshOutput = async () => {\n    if (!editScraperId) return;\n\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Prepare optional parameters\n      const params = {};\n      if (trimOutput) params.trim_tag = trimOutput;\n      if (groupRows) params.group_row_count = groupRows;\n      if (selectedTags.length > 0) params.tags = selectedTags.map(tag => tag.tag);\n      if (rowLabels.length > 0) params.row_labels = rowLabels.map(label => label.row_label);\n\n      // Call /raw endpoint with json output\n      const jsonRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, { params: { ...params, output_format: 'json' } });\n      setRefreshOutputJson(jsonRes.data);\n\n      // Call /raw endpoint with html output\n      const htmlRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, { params: { ...params, output_format: 'html' } });\n      setRefreshOutputHtml(htmlRes.data.raw_html || '');\n\n    } catch (error) {\n      console.error('Error refreshing output:', error);\n      setRefreshOutputJson(null);\n      setRefreshOutputHtml('');\n    }\n  };\n\n  // Call fetchScraperConfigDetails when Edit Configuration modal opens\n  useEffect(() => {\n    if (showEditConfigModal && editScraperId) {\n      fetchScraperConfigDetails(editScraperId);\n    }\n  }, [showEditConfigModal, editScraperId]);\n\n  return (\n    <>\n      <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n        <h1>Scraper API</h1>\n        <button onClick={openAddModal} style={{ marginBottom: '20px', padding: '10px 15px', fontSize: '16px' }}>\n          Add New Scraper\n        </button>\n        <button onClick={fetchScrapers} style={{ marginBottom: '20px', padding: '10px 15px', fontSize: '16px', marginLeft: '10px' }}>\n          Refresh Scraper List\n        </button>\n        {loading ? (\n          <p>Loading scrapers...</p>\n        ) : (\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr style={{ borderBottom: '2px solid #ccc' }}>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Scraper Name</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Scraping URL</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Created On</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Last Updated On</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Options</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scrapers.map(scraper => (\n                <tr key={scraper.scraper_id} style={{ borderBottom: '1px solid #eee' }}>\n                  <td style={{ padding: '8px' }}>{scraper.scraper_name}</td>\n                  <td style={{ padding: '8px' }}>{scraper.scraping_url}</td>\n                  <td style={{ padding: '8px' }}>{scraper.created_on}</td>\n                  <td style={{ padding: '8px' }}>{scraper.last_scraped_on || 'N/A'}</td>\n                  <td style={{ padding: '8px' }}>\n                    <button onClick={() => openEditModal(scraper)} style={{ marginRight: '10px' }}>\n                      Edit\n                    </button>\n                    <button onClick={() => handleDelete(scraper.scraper_id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        {/* Add New Scraper Modal */}\n        {showAddModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 400 }}>\n              <h2>Add New Scraper</h2>\n              {warning && <p style={{ color: 'red' }}>{warning}</p>}\n              <div>\n                <label>Scraper Name:</label><br />\n                <input\n                  type=\"text\"\n                  value={newScraperName}\n                  onChange={(e) => setNewScraperName(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div>\n                <label>Scraping URL:</label><br />\n                <input\n                  type=\"text\"\n                  value={newScrapingUrl}\n                  onChange={(e) => setNewScrapingUrl(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button onClick={closeAddModal} style={{ marginRight: 10 }}>\n                  Cancel\n                </button>\n                <button onClick={handleAddConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Scraper Modal */}\n        {showEditModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 500 }}>\n              <h2>Edit Scraper</h2>\n              {warning && <p style={{ color: 'red' }}>{warning}</p>}\n              <div>\n                <label>Scraper Name:</label><br />\n                <input\n                  type=\"text\"\n                  value={editScraperName}\n                  onChange={(e) => setEditScraperName(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div>\n                <label>Scraping URL:</label><br />\n                <input\n                  type=\"text\"\n                  value={editScrapingUrl}\n                  onChange={(e) => setEditScrapingUrl(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div style={{ display: 'flex', gap: '10px', marginBottom: 10 }}>\n                <button onClick={handleTestScraper}>\n                  Test Scraper\n                </button>\n                <button onClick={openEditConfigModal}>\n                  Edit Configuration\n                </button>\n              </div>\n              {testResult && (\n                <pre style={{ backgroundColor: '#eee', padding: 10, maxHeight: 200, overflowY: 'auto' }}>\n                  {typeof testResult === 'object' ? JSON.stringify(testResult, null, 2) : testResult}\n                </pre>\n              )}\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button onClick={closeEditModal} style={{ marginRight: 10 }}>\n                  Cancel\n                </button>\n                <button onClick={handleEditConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Configuration Modal */}\n        {showEditConfigModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 600, maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Edit Configuration</h2>\n              <div style={{ marginBottom: 10, display: 'flex', alignItems: 'center', gap: '10px' }}>\n                <label>Trim Output:</label>\n                <input\n                  type=\"text\"\n                  value={trimOutput}\n                  onChange={(e) => setTrimOutput(e.target.value)}\n                  placeholder=\"Enter tag to trim output, e.g. <div class='content'>\"\n                  style={{ flexGrow: 1 }}\n                />\n              </div>\n\n              {/* New fields added here */}\n              <div style={{ marginBottom: 10 }}>\n                <label>Selected Tags:</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'auto', border: '1px solid #ccc', padding: '5px' }}>\n                  {selectedTags.map(tag => (\n                    <li key={tag.scraper_config_tag_id}>{tag.tag}</li>\n                  ))}\n                </ul>\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Group Rows:</label>\n                <input\n                  type=\"number\"\n                  value={groupRows}\n                  onChange={(e) => setGroupRows(Number(e.target.value))}\n                  style={{ width: '100px' }}\n                />\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Row Labels:</label>\n                <ol style={{ maxHeight: '150px', overflowY: 'auto', border: '1px solid #ccc', padding: '5px' }}>\n                  {rowLabels.map(label => (\n                    <li key={label.scraper_config_row_label_id}>\n                      {label.row_order}. {label.row_label}\n                    </li>\n                  ))}\n                </ol>\n              </div>\n\n              {/* New toggles and buttons */}\n              <div style={{ display: 'flex', gap: '10px', marginBottom: 10 }}>\n                <button onClick={() => setOutputFormatHtml(!outputFormatHtml)}>\n                  {outputFormatHtml ? 'HTML' : 'JSON'}\n                </button>\n                <button onClick={() => setShowOutput(!showOutput)}>\n                  {showOutput ? 'Hide' : 'Show'}\n                </button>\n                <button onClick={refreshOutput}>\n                  Refresh\n                </button>\n              </div>\n\n              {/* Output display box */}\n              {showOutput && (\n                <pre style={{ backgroundColor: '#eee', padding: 10, maxHeight: 200, overflowY: 'auto', whiteSpace: 'pre-wrap' }}>\n                  {outputFormatHtml ? refreshOutputHtml : JSON.stringify(refreshOutputJson, null, 2)}\n                </pre>\n              )}\n\n              <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n                <button onClick={closeEditConfigModal}>\n                  Close\n                </button>\n                <button onClick={refreshOutput}>\n                  Refresh\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}