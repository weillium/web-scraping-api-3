{"ast":null,"code":"var _jsxFileName = \"/Users/will-liao/Desktop/Coding/web-scraping-api-3/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\nfunction App() {\n  _s();\n  const [scrapers, setScrapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showEditConfigModal, setShowEditConfigModal] = useState(false);\n  const [newScraperName, setNewScraperName] = useState('');\n  const [newScrapingUrl, setNewScrapingUrl] = useState('');\n  const [warning, setWarning] = useState('');\n  const [editScraperId, setEditScraperId] = useState(null);\n  const [editScraperName, setEditScraperName] = useState('');\n  const [editScrapingUrl, setEditScrapingUrl] = useState('');\n  const [testResult, setTestResult] = useState(null);\n  const [trimOutput, setTrimOutput] = useState('');\n\n  // New states for Refresh output and toggles\n  const [refreshOutputHtml, setRefreshOutputHtml] = useState('');\n  const [refreshOutputJson, setRefreshOutputJson] = useState(null);\n  const [showOutput, setShowOutput] = useState(true);\n  const [outputFormatHtml, setOutputFormatHtml] = useState(true); // true=HTML, false=JSON\n\n  // New states for added fields\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [groupRows, setGroupRows] = useState(0);\n  const [rowLabels, setRowLabels] = useState([]);\n\n  // New states for Select Tags modal\n  const [showSelectTagsModal, setShowSelectTagsModal] = useState(false);\n  const [availableTags, setAvailableTags] = useState([]);\n  const [selectedTagIds, setSelectedTagIds] = useState(new Set());\n\n  // New state for Set Labels modal and input values\n  const [showSetLabelsModal, setShowSetLabelsModal] = useState(false);\n  const [labelInputs, setLabelInputs] = useState([]);\n  useEffect(() => {\n    fetchScrapers();\n  }, []);\n  const fetchScrapers = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers`);\n      setScrapers(response.data);\n    } catch (error) {\n      console.error('Error fetching scrapers:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleDelete = async id => {\n    if (!window.confirm('Are you sure you want to delete this scraper?')) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/scrapers`, {\n        data: {\n          scraper_id: id\n        }\n      });\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error deleting scraper:', error);\n    }\n  };\n  const openAddModal = () => {\n    setWarning('');\n    setNewScraperName('');\n    setNewScrapingUrl('');\n    setShowAddModal(true);\n  };\n  const closeAddModal = () => {\n    setShowAddModal(false);\n  };\n  const openEditModal = scraper => {\n    setWarning('');\n    setEditScraperId(scraper.scraper_id);\n    setEditScraperName(scraper.scraper_name);\n    setEditScrapingUrl(scraper.scraping_url);\n    setTestResult(null);\n    setShowEditModal(true);\n  };\n  const closeEditModal = () => {\n    setShowEditModal(false);\n  };\n  const isValidUrl = url => {\n    try {\n      new URL(url);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n  const handleAddConfirm = async () => {\n    if (!newScraperName.trim() || !newScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n    if (!isValidUrl(newScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n    try {\n      await axios.post(`${API_BASE_URL}/scrapers`, {\n        scraper_name: newScraperName,\n        scraping_url: newScrapingUrl\n      });\n      closeAddModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error creating scraper:', error);\n      setWarning('Failed to create scraper. Please try again.');\n    }\n  };\n  const handleEditConfirm = async () => {\n    if (!editScraperName.trim() || !editScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n    if (!isValidUrl(editScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n    try {\n      await axios.put(`${API_BASE_URL}/scrapers`, {\n        scraper_id: editScraperId,\n        scraper_name: editScraperName,\n        scraping_url: editScrapingUrl\n      });\n      closeEditModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error updating scraper:', error);\n      setWarning('Failed to update scraper. Please try again.');\n    }\n  };\n  const handleTestScraper = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}/scrape`);\n      setTestResult(response.data);\n    } catch (error) {\n      console.error('Error testing scraper:', error);\n      setTestResult({\n        error: 'Failed to test scraper.'\n      });\n    }\n  };\n  const openEditConfigModal = () => {\n    setShowEditConfigModal(true);\n  };\n  const closeEditConfigModal = () => {\n    setShowEditConfigModal(false);\n  };\n\n  // Function to parse trim output tag like backend parse_trim_input\n  const parseTrimOutput = trim => {\n    const tagMatch = trim.match(/^<(\\w+)([^>]*)>/);\n    if (!tagMatch) return null;\n    const tagName = tagMatch[1];\n    const attrString = tagMatch[2].trim();\n    const attrs = {};\n    if (attrString) {\n      const classMatch = attrString.match(/class=[\"']([^\"']+)[\"']/);\n      if (classMatch) {\n        attrs.class = classMatch[1].split(' ');\n      }\n    }\n    return {\n      tagName,\n      attrs\n    };\n  };\n\n  // Function to filter raw data based on trim output tag\n  const filterRawData = (data, trim) => {\n    if (!trim || !data) return data;\n    const parsed = parseTrimOutput(trim);\n    if (!parsed) return data;\n\n    // For simplicity, if rawData is an object with html/text, filter keys containing tagName\n    // This is a placeholder; real filtering depends on rawData structure\n    if (typeof data === 'object') {\n      // Example: filter keys containing tagName\n      const filtered = {};\n      Object.keys(data).forEach(key => {\n        if (key.includes(parsed.tagName)) {\n          filtered[key] = data[key];\n        }\n      });\n      return Object.keys(filtered).length > 0 ? filtered : data;\n    }\n    return data;\n  };\n\n  // Fetch scraper config details including new fields\n  const fetchScraperConfigDetails = async scraperId => {\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${scraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Fetch scraper config\n      const configRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}`);\n      const config = configRes.data;\n      setTrimOutput(config.trim_input || '');\n      setGroupRows(config.group_row_count || 1); // default to 1 if falsy\n\n      // Fetch selected tags\n      const tagsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`);\n      setSelectedTags(tagsRes.data || []);\n\n      // Fetch row labels\n      const rowLabelsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`);\n      // Sort row labels by row_order\n      const sortedRowLabels = rowLabelsRes.data.sort((a, b) => a.row_order - b.row_order);\n      setRowLabels(sortedRowLabels);\n    } catch (error) {\n      console.error('Error fetching scraper config details:', error);\n      setTrimOutput('');\n      setSelectedTags([]);\n      setGroupRows(1); // default to 1 on error\n      setRowLabels([]);\n    }\n  };\n\n  // Refresh output by calling /raw endpoint in scraper_routes with optional parameters\n  const refreshOutput = async () => {\n    if (!editScraperId) return;\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Prepare optional parameters\n      const params = {};\n      if (trimOutput) params.trim_tag = trimOutput;\n      if (groupRows) params.group_row_count = groupRows;\n      if (selectedTags.length > 0) params.tags = selectedTags.map(tag => tag.tag);\n      if (rowLabels.length > 0) params.row_labels = rowLabels.map(label => label.row_label);\n\n      // Call /raw endpoint with json output\n      const jsonRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, {\n        params: {\n          ...params,\n          output_format: 'json'\n        }\n      });\n      setRefreshOutputJson(jsonRes.data);\n\n      // Call /raw endpoint with html output\n      const htmlRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, {\n        params: {\n          ...params,\n          output_format: 'html'\n        }\n      });\n      setRefreshOutputHtml(htmlRes.data.raw_html || '');\n    } catch (error) {\n      console.error('Error refreshing output:', error);\n      setRefreshOutputJson(null);\n      setRefreshOutputHtml('');\n    }\n  };\n\n  // Call fetchScraperConfigDetails when Edit Configuration modal opens\n  useEffect(() => {\n    if (showEditConfigModal && editScraperId) {\n      fetchScraperConfigDetails(editScraperId);\n    }\n  }, [showEditConfigModal, editScraperId]);\n\n  // Fetch available tags when Select Tags modal opens\n  useEffect(() => {\n    if (showSelectTagsModal && editScraperId) {\n      const fetchTags = async () => {\n        try {\n          const params = {};\n          if (trimOutput) params.trim_tag = trimOutput;\n          const res = await axios.get(`${API_BASE_URL}/raw/${editScraperId}/tags`, {\n            params\n          });\n          const tags = res.data.tags || [];\n          const descendentTags = res.data.descendent_tags || [];\n          // Combine tags and descendent tags\n          const combinedTags = [...tags, ...descendentTags];\n\n          // Remove duplicates by tag name\n          const uniqueTagsMap = new Map();\n          combinedTags.forEach(t => {\n            if (!uniqueTagsMap.has(t.tag)) {\n              uniqueTagsMap.set(t.tag, t);\n            }\n          });\n          const uniqueTags = Array.from(uniqueTagsMap.values());\n\n          // Calculate occurrences for each tag\n          const occurrencesMap = new Map();\n          uniqueTags.forEach(t => {\n            const count = res.data.raw_html ? (res.data.raw_html.match(new RegExp(`<${t.tag}[^>]*>`, 'g')) || []).length : 0;\n            occurrencesMap.set(t.tag, count);\n          });\n\n          // Add occurrences to each tag object\n          const tagsWithOccurrences = uniqueTags.map(t => ({\n            ...t,\n            occurrences: occurrencesMap.get(t.tag) || 0\n          }));\n          setAvailableTags(tagsWithOccurrences);\n\n          // Initialize selectedTagIds from current selectedTags\n          const currentSelected = new Set(selectedTags.map(t => t.tag));\n          setSelectedTagIds(currentSelected);\n        } catch (error) {\n          console.error('Error fetching available tags:', error);\n          setAvailableTags([]);\n        }\n      };\n      fetchTags();\n    }\n  }, [showSelectTagsModal, editScraperId]);\n  const toggleTagSelection = tag => {\n    const newSelected = new Set(selectedTagIds);\n    if (newSelected.has(tag)) {\n      newSelected.delete(tag);\n    } else {\n      newSelected.add(tag);\n    }\n    setSelectedTagIds(newSelected);\n  };\n  const confirmTagSelection = () => {\n    // Update selectedTags state with selected tags\n    const newSelectedTags = availableTags.filter(t => selectedTagIds.has(t.tag)).map(t => ({\n      tag: t.tag\n    }));\n    setSelectedTags(newSelectedTags);\n    setShowSelectTagsModal(false);\n  };\n  const cancelTagSelection = () => {\n    setShowSelectTagsModal(false);\n  };\n\n  // Open Set Labels modal and initialize inputs based on groupRows\n  const openSetLabelsModal = () => {\n    const count = groupRows > 0 ? groupRows : 1;\n    const inputs = [];\n    for (let i = 0; i < count; i++) {\n      var _rowLabels$i;\n      inputs.push(((_rowLabels$i = rowLabels[i]) === null || _rowLabels$i === void 0 ? void 0 : _rowLabels$i.row_label) || '');\n    }\n    setLabelInputs(inputs);\n    setShowSetLabelsModal(true);\n  };\n\n  // Handle input change in Set Labels modal\n  const handleLabelInputChange = (index, value) => {\n    const newInputs = [...labelInputs];\n    newInputs[index] = value;\n    setLabelInputs(newInputs);\n  };\n\n  // Confirm Set Labels modal and update rowLabels state\n  const confirmSetLabels = () => {\n    const newRowLabels = labelInputs.map((label, index) => ({\n      row_order: index + 1,\n      row_label: label\n    }));\n    setRowLabels(newRowLabels);\n    setShowSetLabelsModal(false);\n  };\n\n  // Cancel Set Labels modal\n  const cancelSetLabels = () => {\n    setShowSetLabelsModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '20px',\n        fontFamily: 'Arial, sans-serif'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Scraper API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: openAddModal,\n        style: {\n          marginBottom: '20px',\n          padding: '10px 15px',\n          fontSize: '16px'\n        },\n        children: \"Add New Scraper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchScrapers,\n        style: {\n          marginBottom: '20px',\n          padding: '10px 15px',\n          fontSize: '16px',\n          marginLeft: '10px'\n        },\n        children: \"Refresh Scraper List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading scrapers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        style: {\n          width: '100%',\n          borderCollapse: 'collapse'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '2px solid #ccc'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Scraper Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Scraping URL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Created On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Last Updated On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: 'left',\n                padding: '8px'\n              },\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: scrapers.map(scraper => /*#__PURE__*/_jsxDEV(\"tr\", {\n            style: {\n              borderBottom: '1px solid #eee'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.scraper_name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.scraping_url\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 398,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.created_on\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: scraper.last_scraped_on || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: '8px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => openEditModal(scraper),\n                style: {\n                  marginRight: '10px'\n                },\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(scraper.scraper_id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 19\n            }, this)]\n          }, scraper.scraper_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), showAddModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Add New Scraper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), warning && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraper Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newScraperName,\n              onChange: e => setNewScraperName(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraping URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newScrapingUrl,\n              onChange: e => setNewScrapingUrl(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeAddModal,\n              style: {\n                marginRight: 10\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleAddConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 11\n      }, this), showEditModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Scraper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), warning && /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: 'red'\n            },\n            children: warning\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraper Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editScraperName,\n              onChange: e => setEditScraperName(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Scraping URL:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: editScrapingUrl,\n              onChange: e => setEditScrapingUrl(e.target.value),\n              style: {\n                width: '100%',\n                marginBottom: 10\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleTestScraper,\n              children: \"Test Scraper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: openEditConfigModal,\n              children: \"Edit Configuration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 485,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), testResult && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#eee',\n              padding: 10,\n              maxHeight: 200,\n              overflowY: 'auto'\n            },\n            children: typeof testResult === 'object' ? JSON.stringify(testResult, null, 2) : testResult\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeEditModal,\n              style: {\n                marginRight: 10\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleEditConfirm,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 11\n      }, this), showEditConfigModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 600,\n            maxHeight: '80vh',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Edit Configuration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 513,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10,\n              display: 'flex',\n              alignItems: 'center',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Trim Output:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: trimOutput,\n              onChange: e => setTrimOutput(e.target.value),\n              placeholder: \"Enter tag to trim output, e.g. <div class='content'>\",\n              style: {\n                flexGrow: 1\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 516,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Selected Tags:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                maxHeight: '100px',\n                overflowY: 'auto',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              children: selectedTags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: tag.tag\n              }, tag.tag, false, {\n                fileName: _jsxFileName,\n                lineNumber: 529,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 527,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setShowSelectTagsModal(true),\n                children: \"Select Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Group Rows:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              value: groupRows,\n              onChange: e => setGroupRows(Number(e.target.value)),\n              style: {\n                width: '100px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 541,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Row Labels:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 550,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              style: {\n                maxHeight: '150px',\n                overflowY: 'auto',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              children: rowLabels.map(label => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [label.row_order, \". \", label.row_label]\n              }, label.scraper_config_row_label_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              gap: '10px',\n              marginBottom: 10\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setOutputFormatHtml(!outputFormatHtml),\n              children: outputFormatHtml ? 'HTML' : 'JSON'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowOutput(!showOutput),\n              children: showOutput ? 'Hide' : 'Show'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: refreshOutput,\n              children: \"Refresh\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 568,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowSelectTagsModal(true),\n              children: \"Select Tags\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: openSetLabelsModal,\n              children: \"Set Labels\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 15\n          }, this), showOutput && /*#__PURE__*/_jsxDEV(\"pre\", {\n            style: {\n              backgroundColor: '#eee',\n              padding: 10,\n              maxHeight: 200,\n              overflowY: 'auto',\n              whiteSpace: 'pre-wrap'\n            },\n            children: outputFormatHtml ? refreshOutputHtml : JSON.stringify(refreshOutputJson, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 581,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: '10px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: closeEditConfigModal,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), showSelectTagsModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 700,\n            maxHeight: '80vh',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Select Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            style: {\n              width: '100%',\n              borderCollapse: 'collapse'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  borderBottom: '2px solid #ccc'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'left',\n                    padding: '8px'\n                  },\n                  children: \"Tag\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'left',\n                    padding: '8px',\n                    maxWidth: '300px',\n                    wordWrap: 'break-word'\n                  },\n                  children: \"Example Output\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  style: {\n                    textAlign: 'center',\n                    padding: '8px'\n                  },\n                  children: \"Select Tag\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: availableTags.map(({\n                tag,\n                example_output\n              }, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  borderBottom: '1px solid #eee'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '8px'\n                  },\n                  children: tag\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 614,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '8px',\n                    maxWidth: '300px',\n                    wordWrap: 'break-word'\n                  },\n                  children: example_output\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 615,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: '8px',\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"checkbox\",\n                    checked: selectedTagIds.has(tag),\n                    onChange: () => toggleTagSelection(tag)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 617,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 616,\n                  columnNumber: 23\n                }, this)]\n              }, `${tag}-${index}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 613,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 611,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              marginTop: 10,\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelTagSelection,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 628,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: confirmTagSelection,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 629,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 627,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this), showSetLabelsModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          right: 0,\n          bottom: 0,\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            backgroundColor: 'white',\n            padding: 20,\n            borderRadius: 5,\n            width: 400,\n            maxHeight: '80vh',\n            overflowY: 'auto'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Set Labels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n            style: {\n              paddingLeft: '20px'\n            },\n            children: labelInputs.map((value, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: value,\n                onChange: e => handleLabelInputChange(index, e.target.value),\n                style: {\n                  width: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 21\n              }, this)\n            }, `label-input-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 645,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 643,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'flex-end',\n              gap: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: cancelSetLabels,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: confirmSetLabels,\n              children: \"Confirm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"3lIlnPCHLEH/sZoMKNQpPOj1WmA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","App","_s","scrapers","setScrapers","loading","setLoading","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showEditConfigModal","setShowEditConfigModal","newScraperName","setNewScraperName","newScrapingUrl","setNewScrapingUrl","warning","setWarning","editScraperId","setEditScraperId","editScraperName","setEditScraperName","editScrapingUrl","setEditScrapingUrl","testResult","setTestResult","trimOutput","setTrimOutput","refreshOutputHtml","setRefreshOutputHtml","refreshOutputJson","setRefreshOutputJson","showOutput","setShowOutput","outputFormatHtml","setOutputFormatHtml","selectedTags","setSelectedTags","groupRows","setGroupRows","rowLabels","setRowLabels","showSelectTagsModal","setShowSelectTagsModal","availableTags","setAvailableTags","selectedTagIds","setSelectedTagIds","Set","showSetLabelsModal","setShowSetLabelsModal","labelInputs","setLabelInputs","fetchScrapers","response","get","data","error","console","handleDelete","id","window","confirm","delete","scraper_id","openAddModal","closeAddModal","openEditModal","scraper","scraper_name","scraping_url","closeEditModal","isValidUrl","url","URL","_","handleAddConfirm","trim","post","handleEditConfirm","put","handleTestScraper","openEditConfigModal","closeEditConfigModal","parseTrimOutput","tagMatch","match","tagName","attrString","attrs","classMatch","class","split","filterRawData","parsed","filtered","Object","keys","forEach","key","includes","length","fetchScraperConfigDetails","scraperId","scraperRes","scraperConfigId","scraper_config_id","configRes","config","trim_input","group_row_count","tagsRes","rowLabelsRes","sortedRowLabels","sort","a","b","row_order","refreshOutput","params","trim_tag","tags","map","tag","row_labels","label","row_label","jsonRes","output_format","htmlRes","raw_html","fetchTags","res","descendentTags","descendent_tags","combinedTags","uniqueTagsMap","Map","t","has","set","uniqueTags","Array","from","values","occurrencesMap","count","RegExp","tagsWithOccurrences","occurrences","currentSelected","toggleTagSelection","newSelected","add","confirmTagSelection","newSelectedTags","filter","cancelTagSelection","openSetLabelsModal","inputs","i","_rowLabels$i","push","handleLabelInputChange","index","value","newInputs","confirmSetLabels","newRowLabels","cancelSetLabels","children","style","padding","fontFamily","fileName","_jsxFileName","lineNumber","columnNumber","onClick","marginBottom","fontSize","marginLeft","width","borderCollapse","borderBottom","textAlign","created_on","last_scraped_on","marginRight","position","top","left","right","bottom","backgroundColor","display","justifyContent","alignItems","borderRadius","color","type","onChange","e","target","gap","maxHeight","overflowY","JSON","stringify","placeholder","flexGrow","border","Number","scraper_config_row_label_id","whiteSpace","maxWidth","wordWrap","example_output","checked","marginTop","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/will-liao/Desktop/Coding/web-scraping-api-3/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5000';\n\nfunction App() {\n  const [scrapers, setScrapers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [showAddModal, setShowAddModal] = useState(false);\n  const [showEditModal, setShowEditModal] = useState(false);\n  const [showEditConfigModal, setShowEditConfigModal] = useState(false);\n  const [newScraperName, setNewScraperName] = useState('');\n  const [newScrapingUrl, setNewScrapingUrl] = useState('');\n  const [warning, setWarning] = useState('');\n  const [editScraperId, setEditScraperId] = useState(null);\n  const [editScraperName, setEditScraperName] = useState('');\n  const [editScrapingUrl, setEditScrapingUrl] = useState('');\n  const [testResult, setTestResult] = useState(null);\n  const [trimOutput, setTrimOutput] = useState('');\n\n  // New states for Refresh output and toggles\n  const [refreshOutputHtml, setRefreshOutputHtml] = useState('');\n  const [refreshOutputJson, setRefreshOutputJson] = useState(null);\n  const [showOutput, setShowOutput] = useState(true);\n  const [outputFormatHtml, setOutputFormatHtml] = useState(true); // true=HTML, false=JSON\n\n  // New states for added fields\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [groupRows, setGroupRows] = useState(0);\n  const [rowLabels, setRowLabels] = useState([]);\n\n  // New states for Select Tags modal\n  const [showSelectTagsModal, setShowSelectTagsModal] = useState(false);\n  const [availableTags, setAvailableTags] = useState([]);\n  const [selectedTagIds, setSelectedTagIds] = useState(new Set());\n\n  // New state for Set Labels modal and input values\n  const [showSetLabelsModal, setShowSetLabelsModal] = useState(false);\n  const [labelInputs, setLabelInputs] = useState([]);\n\n  useEffect(() => {\n    fetchScrapers();\n  }, []);\n\n  const fetchScrapers = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers`);\n      setScrapers(response.data);\n    } catch (error) {\n      console.error('Error fetching scrapers:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleDelete = async (id) => {\n    if (!window.confirm('Are you sure you want to delete this scraper?')) return;\n    try {\n      await axios.delete(`${API_BASE_URL}/scrapers`, { data: { scraper_id: id } });\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error deleting scraper:', error);\n    }\n  };\n\n  const openAddModal = () => {\n    setWarning('');\n    setNewScraperName('');\n    setNewScrapingUrl('');\n    setShowAddModal(true);\n  };\n\n  const closeAddModal = () => {\n    setShowAddModal(false);\n  };\n\n  const openEditModal = (scraper) => {\n    setWarning('');\n    setEditScraperId(scraper.scraper_id);\n    setEditScraperName(scraper.scraper_name);\n    setEditScrapingUrl(scraper.scraping_url);\n    setTestResult(null);\n    setShowEditModal(true);\n  };\n\n  const closeEditModal = () => {\n    setShowEditModal(false);\n  };\n\n  const isValidUrl = (url) => {\n    try {\n      new URL(url);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  };\n\n  const handleAddConfirm = async () => {\n    if (!newScraperName.trim() || !newScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n\n    if (!isValidUrl(newScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n\n    try {\n      await axios.post(`${API_BASE_URL}/scrapers`, {\n        scraper_name: newScraperName,\n        scraping_url: newScrapingUrl\n      });\n      closeAddModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error creating scraper:', error);\n      setWarning('Failed to create scraper. Please try again.');\n    }\n  };\n\n  const handleEditConfirm = async () => {\n    if (!editScraperName.trim() || !editScrapingUrl.trim()) {\n      setWarning('Please fill in both Scraper Name and Scraping URL.');\n      return;\n    }\n\n    if (!isValidUrl(editScrapingUrl.trim())) {\n      setWarning('Please enter a valid URL for Scraping URL.');\n      return;\n    }\n\n    try {\n      await axios.put(`${API_BASE_URL}/scrapers`, {\n        scraper_id: editScraperId,\n        scraper_name: editScraperName,\n        scraping_url: editScrapingUrl\n      });\n      closeEditModal();\n      fetchScrapers();\n    } catch (error) {\n      console.error('Error updating scraper:', error);\n      setWarning('Failed to update scraper. Please try again.');\n    }\n  };\n\n  const handleTestScraper = async () => {\n    try {\n      const response = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}/scrape`);\n      setTestResult(response.data);\n    } catch (error) {\n      console.error('Error testing scraper:', error);\n      setTestResult({ error: 'Failed to test scraper.' });\n    }\n  };\n\n  const openEditConfigModal = () => {\n    setShowEditConfigModal(true);\n  };\n\n  const closeEditConfigModal = () => {\n    setShowEditConfigModal(false);\n  };\n\n  // Function to parse trim output tag like backend parse_trim_input\n  const parseTrimOutput = (trim) => {\n    const tagMatch = trim.match(/^<(\\w+)([^>]*)>/);\n    if (!tagMatch) return null;\n    const tagName = tagMatch[1];\n    const attrString = tagMatch[2].trim();\n    const attrs = {};\n    if (attrString) {\n      const classMatch = attrString.match(/class=[\"']([^\"']+)[\"']/);\n      if (classMatch) {\n        attrs.class = classMatch[1].split(' ');\n      }\n    }\n    return { tagName, attrs };\n  };\n\n  // Function to filter raw data based on trim output tag\n  const filterRawData = (data, trim) => {\n    if (!trim || !data) return data;\n    const parsed = parseTrimOutput(trim);\n    if (!parsed) return data;\n\n    // For simplicity, if rawData is an object with html/text, filter keys containing tagName\n    // This is a placeholder; real filtering depends on rawData structure\n    if (typeof data === 'object') {\n      // Example: filter keys containing tagName\n      const filtered = {};\n      Object.keys(data).forEach(key => {\n        if (key.includes(parsed.tagName)) {\n          filtered[key] = data[key];\n        }\n      });\n      return Object.keys(filtered).length > 0 ? filtered : data;\n    }\n    return data;\n  };\n\n  // Fetch scraper config details including new fields\n  const fetchScraperConfigDetails = async (scraperId) => {\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${scraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Fetch scraper config\n      const configRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}`);\n      const config = configRes.data;\n      setTrimOutput(config.trim_input || '');\n      setGroupRows(config.group_row_count || 1); // default to 1 if falsy\n\n      // Fetch selected tags\n      const tagsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/tags`);\n      setSelectedTags(tagsRes.data || []);\n\n      // Fetch row labels\n      const rowLabelsRes = await axios.get(`${API_BASE_URL}/scraper-config/${scraperConfigId}/row-labels`);\n      // Sort row labels by row_order\n      const sortedRowLabels = rowLabelsRes.data.sort((a, b) => a.row_order - b.row_order);\n      setRowLabels(sortedRowLabels);\n\n    } catch (error) {\n      console.error('Error fetching scraper config details:', error);\n      setTrimOutput('');\n      setSelectedTags([]);\n      setGroupRows(1); // default to 1 on error\n      setRowLabels([]);\n    }\n  };\n\n  // Refresh output by calling /raw endpoint in scraper_routes with optional parameters\n  const refreshOutput = async () => {\n    if (!editScraperId) return;\n\n    try {\n      // Fetch scraper to get scraper_config_id\n      const scraperRes = await axios.get(`${API_BASE_URL}/scrapers/${editScraperId}`);\n      const scraperConfigId = scraperRes.data.scraper_config_id;\n\n      // Prepare optional parameters\n      const params = {};\n      if (trimOutput) params.trim_tag = trimOutput;\n      if (groupRows) params.group_row_count = groupRows;\n      if (selectedTags.length > 0) params.tags = selectedTags.map(tag => tag.tag);\n      if (rowLabels.length > 0) params.row_labels = rowLabels.map(label => label.row_label);\n\n      // Call /raw endpoint with json output\n      const jsonRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, { params: { ...params, output_format: 'json' } });\n      setRefreshOutputJson(jsonRes.data);\n\n      // Call /raw endpoint with html output\n      const htmlRes = await axios.get(`${API_BASE_URL}/raw/${editScraperId}`, { params: { ...params, output_format: 'html' } });\n      setRefreshOutputHtml(htmlRes.data.raw_html || '');\n\n    } catch (error) {\n      console.error('Error refreshing output:', error);\n      setRefreshOutputJson(null);\n      setRefreshOutputHtml('');\n    }\n  };\n\n  // Call fetchScraperConfigDetails when Edit Configuration modal opens\n  useEffect(() => {\n    if (showEditConfigModal && editScraperId) {\n      fetchScraperConfigDetails(editScraperId);\n    }\n  }, [showEditConfigModal, editScraperId]);\n\n  // Fetch available tags when Select Tags modal opens\n  useEffect(() => {\n    if (showSelectTagsModal && editScraperId) {\n      const fetchTags = async () => {\n        try {\n          const params = {};\n          if (trimOutput) params.trim_tag = trimOutput;\n          const res = await axios.get(`${API_BASE_URL}/raw/${editScraperId}/tags`, { params });\n          const tags = res.data.tags || [];\n          const descendentTags = res.data.descendent_tags || [];\n          // Combine tags and descendent tags\n          const combinedTags = [...tags, ...descendentTags];\n\n          // Remove duplicates by tag name\n          const uniqueTagsMap = new Map();\n          combinedTags.forEach(t => {\n            if (!uniqueTagsMap.has(t.tag)) {\n              uniqueTagsMap.set(t.tag, t);\n            }\n          });\n          const uniqueTags = Array.from(uniqueTagsMap.values());\n\n          // Calculate occurrences for each tag\n          const occurrencesMap = new Map();\n          uniqueTags.forEach(t => {\n            const count = res.data.raw_html ? (res.data.raw_html.match(new RegExp(`<${t.tag}[^>]*>`, 'g')) || []).length : 0;\n            occurrencesMap.set(t.tag, count);\n          });\n\n          // Add occurrences to each tag object\n          const tagsWithOccurrences = uniqueTags.map(t => ({ ...t, occurrences: occurrencesMap.get(t.tag) || 0 }));\n\n          setAvailableTags(tagsWithOccurrences);\n\n          // Initialize selectedTagIds from current selectedTags\n          const currentSelected = new Set(selectedTags.map(t => t.tag));\n          setSelectedTagIds(currentSelected);\n        } catch (error) {\n          console.error('Error fetching available tags:', error);\n          setAvailableTags([]);\n        }\n      };\n      fetchTags();\n    }\n  }, [showSelectTagsModal, editScraperId]);\n\n  const toggleTagSelection = (tag) => {\n    const newSelected = new Set(selectedTagIds);\n    if (newSelected.has(tag)) {\n      newSelected.delete(tag);\n    } else {\n      newSelected.add(tag);\n    }\n    setSelectedTagIds(newSelected);\n  };\n\n  const confirmTagSelection = () => {\n    // Update selectedTags state with selected tags\n    const newSelectedTags = availableTags.filter(t => selectedTagIds.has(t.tag)).map(t => ({ tag: t.tag }));\n    setSelectedTags(newSelectedTags);\n    setShowSelectTagsModal(false);\n  };\n\n  const cancelTagSelection = () => {\n    setShowSelectTagsModal(false);\n  };\n\n  // Open Set Labels modal and initialize inputs based on groupRows\n  const openSetLabelsModal = () => {\n    const count = groupRows > 0 ? groupRows : 1;\n    const inputs = [];\n    for (let i = 0; i < count; i++) {\n      inputs.push(rowLabels[i]?.row_label || '');\n    }\n    setLabelInputs(inputs);\n    setShowSetLabelsModal(true);\n  };\n\n  // Handle input change in Set Labels modal\n  const handleLabelInputChange = (index, value) => {\n    const newInputs = [...labelInputs];\n    newInputs[index] = value;\n    setLabelInputs(newInputs);\n  };\n\n  // Confirm Set Labels modal and update rowLabels state\n  const confirmSetLabels = () => {\n    const newRowLabels = labelInputs.map((label, index) => ({ row_order: index + 1, row_label: label }));\n    setRowLabels(newRowLabels);\n    setShowSetLabelsModal(false);\n  };\n\n  // Cancel Set Labels modal\n  const cancelSetLabels = () => {\n    setShowSetLabelsModal(false);\n  };\n\n  return (\n    <>\n      <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif' }}>\n        <h1>Scraper API</h1>\n        <button onClick={openAddModal} style={{ marginBottom: '20px', padding: '10px 15px', fontSize: '16px' }}>\n          Add New Scraper\n        </button>\n        <button onClick={fetchScrapers} style={{ marginBottom: '20px', padding: '10px 15px', fontSize: '16px', marginLeft: '10px' }}>\n          Refresh Scraper List\n        </button>\n        {loading ? (\n          <p>Loading scrapers...</p>\n        ) : (\n          <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n            <thead>\n              <tr style={{ borderBottom: '2px solid #ccc' }}>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Scraper Name</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Scraping URL</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Created On</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Last Updated On</th>\n                <th style={{ textAlign: 'left', padding: '8px' }}>Options</th>\n              </tr>\n            </thead>\n            <tbody>\n              {scrapers.map(scraper => (\n                <tr key={scraper.scraper_id} style={{ borderBottom: '1px solid #eee' }}>\n                  <td style={{ padding: '8px' }}>{scraper.scraper_name}</td>\n                  <td style={{ padding: '8px' }}>{scraper.scraping_url}</td>\n                  <td style={{ padding: '8px' }}>{scraper.created_on}</td>\n                  <td style={{ padding: '8px' }}>{scraper.last_scraped_on || 'N/A'}</td>\n                  <td style={{ padding: '8px' }}>\n                    <button onClick={() => openEditModal(scraper)} style={{ marginRight: '10px' }}>\n                      Edit\n                    </button>\n                    <button onClick={() => handleDelete(scraper.scraper_id)}>\n                      Delete\n                    </button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        )}\n\n        {/* Add New Scraper Modal */}\n        {showAddModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 400 }}>\n              <h2>Add New Scraper</h2>\n              {warning && <p style={{ color: 'red' }}>{warning}</p>}\n              <div>\n                <label>Scraper Name:</label><br />\n                <input\n                  type=\"text\"\n                  value={newScraperName}\n                  onChange={(e) => setNewScraperName(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div>\n                <label>Scraping URL:</label><br />\n                <input\n                  type=\"text\"\n                  value={newScrapingUrl}\n                  onChange={(e) => setNewScrapingUrl(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button onClick={closeAddModal} style={{ marginRight: 10 }}>\n                  Cancel\n                </button>\n                <button onClick={handleAddConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Scraper Modal */}\n        {showEditModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 500 }}>\n              <h2>Edit Scraper</h2>\n              {warning && <p style={{ color: 'red' }}>{warning}</p>}\n              <div>\n                <label>Scraper Name:</label><br />\n                <input\n                  type=\"text\"\n                  value={editScraperName}\n                  onChange={(e) => setEditScraperName(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div>\n                <label>Scraping URL:</label><br />\n                <input\n                  type=\"text\"\n                  value={editScrapingUrl}\n                  onChange={(e) => setEditScrapingUrl(e.target.value)}\n                  style={{ width: '100%', marginBottom: 10 }}\n                />\n              </div>\n              <div style={{ display: 'flex', gap: '10px', marginBottom: 10 }}>\n                <button onClick={handleTestScraper}>\n                  Test Scraper\n                </button>\n                <button onClick={openEditConfigModal}>\n                  Edit Configuration\n                </button>\n              </div>\n              {testResult && (\n                <pre style={{ backgroundColor: '#eee', padding: 10, maxHeight: 200, overflowY: 'auto' }}>\n                  {typeof testResult === 'object' ? JSON.stringify(testResult, null, 2) : testResult}\n                </pre>\n              )}\n              <div style={{ display: 'flex', justifyContent: 'flex-end' }}>\n                <button onClick={closeEditModal} style={{ marginRight: 10 }}>\n                  Cancel\n                </button>\n                <button onClick={handleEditConfirm}>\n                  Confirm\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Edit Configuration Modal */}\n        {showEditConfigModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 600, maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Edit Configuration</h2>\n              <div style={{ marginBottom: 10, display: 'flex', alignItems: 'center', gap: '10px' }}>\n                <label>Trim Output:</label>\n                <input\n                  type=\"text\"\n                  value={trimOutput}\n                  onChange={(e) => setTrimOutput(e.target.value)}\n                  placeholder=\"Enter tag to trim output, e.g. <div class='content'>\"\n                  style={{ flexGrow: 1 }}\n                />\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Selected Tags:</label>\n                <ul style={{ maxHeight: '100px', overflowY: 'auto', border: '1px solid #ccc', padding: '5px' }}>\n                  {selectedTags.map(tag => (\n                    <li key={tag.tag}>{tag.tag}</li>\n                  ))}\n                </ul>\n                <div style={{ display: 'flex', gap: '10px' }}>\n                  <button onClick={() => setShowSelectTagsModal(true)}>\n                    Select Tags\n                  </button>\n                </div>\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Group Rows:</label>\n                <input\n                  type=\"number\"\n                  value={groupRows}\n                  onChange={(e) => setGroupRows(Number(e.target.value))}\n                  style={{ width: '100px' }}\n                />\n              </div>\n\n              <div style={{ marginBottom: 10 }}>\n                <label>Row Labels:</label>\n                <ol style={{ maxHeight: '150px', overflowY: 'auto', border: '1px solid #ccc', padding: '5px' }}>\n                  {rowLabels.map(label => (\n                    <li key={label.scraper_config_row_label_id}>\n                      {label.row_order}. {label.row_label}\n                    </li>\n                  ))}\n                </ol>\n              </div>\n\n              {/* New toggles and buttons */}\n              <div style={{ display: 'flex', gap: '10px', marginBottom: 10 }}>\n                <button onClick={() => setOutputFormatHtml(!outputFormatHtml)}>\n                  {outputFormatHtml ? 'HTML' : 'JSON'}\n                </button>\n                <button onClick={() => setShowOutput(!showOutput)}>\n                  {showOutput ? 'Hide' : 'Show'}\n                </button>\n                <button onClick={refreshOutput}>\n                  Refresh\n                </button>\n                <button onClick={() => setShowSelectTagsModal(true)}>\n                  Select Tags\n                </button>\n                <button onClick={openSetLabelsModal}>\n                  Set Labels\n                </button>\n              </div>\n\n              {/* Output display box */}\n              {showOutput && (\n                <pre style={{ backgroundColor: '#eee', padding: 10, maxHeight: 200, overflowY: 'auto', whiteSpace: 'pre-wrap' }}>\n                  {outputFormatHtml ? refreshOutputHtml : JSON.stringify(refreshOutputJson, null, 2)}\n                </pre>\n              )}\n\n              <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n                <button onClick={closeEditConfigModal}>\n                  Close\n                </button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Select Tags Modal */}\n        {showSelectTagsModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 700, maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Select Tags</h2>\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\n                <thead>\n                  <tr style={{ borderBottom: '2px solid #ccc' }}>\n                    <th style={{ textAlign: 'left', padding: '8px' }}>Tag</th>\n                    <th style={{ textAlign: 'left', padding: '8px', maxWidth: '300px', wordWrap: 'break-word' }}>Example Output</th>\n                    <th style={{ textAlign: 'center', padding: '8px' }}>Select Tag</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {availableTags.map(({ tag, example_output }, index) => (\n                    <tr key={`${tag}-${index}`} style={{ borderBottom: '1px solid #eee' }}>\n                      <td style={{ padding: '8px' }}>{tag}</td>\n                      <td style={{ padding: '8px', maxWidth: '300px', wordWrap: 'break-word' }}>{example_output}</td>\n                      <td style={{ padding: '8px', textAlign: 'center' }}>\n                        <input\n                          type=\"checkbox\"\n                          checked={selectedTagIds.has(tag)}\n                          onChange={() => toggleTagSelection(tag)}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n              <div style={{ display: 'flex', justifyContent: 'flex-end', marginTop: 10, gap: '10px' }}>\n                <button onClick={cancelTagSelection}>Cancel</button>\n                <button onClick={confirmTagSelection}>Confirm</button>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* Set Labels Modal */}\n        {showSetLabelsModal && (\n          <div style={{\n            position: 'fixed', top: 0, left: 0, right: 0, bottom: 0,\n            backgroundColor: 'rgba(0,0,0,0.5)', display: 'flex', justifyContent: 'center', alignItems: 'center'\n          }}>\n            <div style={{ backgroundColor: 'white', padding: 20, borderRadius: 5, width: 400, maxHeight: '80vh', overflowY: 'auto' }}>\n              <h2>Set Labels</h2>\n              <ol style={{ paddingLeft: '20px' }}>\n                {labelInputs.map((value, index) => (\n                  <li key={`label-input-${index}`} style={{ marginBottom: '10px' }}>\n                    <input\n                      type=\"text\"\n                      value={value}\n                      onChange={(e) => handleLabelInputChange(index, e.target.value)}\n                      style={{ width: '100%' }}\n                    />\n                  </li>\n                ))}\n              </ol>\n              <div style={{ display: 'flex', justifyContent: 'flex-end', gap: '10px' }}>\n                <button onClick={cancelSetLabels}>Cancel</button>\n                <button onClick={confirmSetLabels}>Confirm</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}